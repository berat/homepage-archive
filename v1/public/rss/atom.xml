<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://beratbozkurt.net</id>
    <title>Berat Bozkurt | front-end developer</title>
    <updated>2024-10-07T08:16:38.315Z</updated>
    <generator>Feed for Node.js</generator>
    <author>
        <name>Berat Bozkurt</name>
        <email>beratbozkurt1999@gmail.com</email>
        <uri>https://twitter.com/beratbozkurt0</uri>
    </author>
    <link rel="alternate" href="https://beratbozkurt.net"/>
    <link rel="self" href="https://beratbozkurt.net/rss/atom.xml"/>
    <subtitle>Berat Bozkurt, front-end developer, photography, blogging</subtitle>
    <rights>All rights reserved 2024, Berat Bozkurt</rights>
    <entry>
        <title type="html"><![CDATA[Neler Yapıyorum? Aklımda Neler Var? #3]]></title>
        <id>https://beratbozkurt.net/blog/neler-yapiyorum-aklimda-neler-var-3</id>
        <link href="https://beratbozkurt.net/blog/neler-yapiyorum-aklimda-neler-var-3"/>
        <updated>2022-04-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
Yoğun geçen ve geçmekte olan bir sürecin ardından bir blog yazmak için bilgisayara oturdum. Ramazan'ın 2. günü ve dışarıdaki yoğun rüzgarlardan dolayı elektrik kesintisini verimli ana geçirmek istedim. Bundan dolayı da açtım VS Code'u yazmaya başladım. Eveett bugün neler yaptığımı ve aklımda neler olduğunu sizlere dökeceğim. Eh hadi başlayalım madem. 

OSF Digital'e yeni girmiştim ve yaklaşık 5 ayım oldu. Trial period sürecini atlayıp terfi alarak çalışmaya devam ediyorum. Bu süreçte her şey çok güzel gidiyor ve biraz daha dolu dolu geçmesi için atılkan olup daha fazla aktif olmak istiyorum. Bu şekilde hem kişisel gelişimimi hem ingilizcemi hem de teknik becerilerimi geliştirmeyi hedefliyorum. Aynı zamanda büyük bir şirket olduğundan dolayı da oturmuş bir düzen var ve tüm süreçlerin nasıl işlediğini çok iyi bir şekilde öğrenmiş, benimsemiş ve aşina olmuş oluyorum. 

Bir diğer tarafta ise nişanlandım ve yaza düğünüm var. Beyaz eşyadır, mutfak araç gereçleridir, ev arayışıdır gibi tatlı telaşlarımız var. Tabii bi o kadar da stresli bir süreç. Bir an önce tüm bu hazırlıklar bitsin de artık yeni hayatımıza başlayalım diyor insan. Bununla birlikte ev ile ilgili olan her şeye aşina olmaya başladım. Belki yakında teknoloji kanalı açıp hangi süpürge alınmalı hangi ütü alınnmalı diye bir video çekerim(!)

Takip edenlerin bildiği üzere blogu **Gatsby** ile geliştirmiştim ve alacağımı aldıktan sonra teknolojiyi değiştirdim. Teknoloji olarak tüm yapıyı **Next.js**'e geçtim ve artık geliştirmeleri buradan devam edeceğim. Bu şekilde blogu bir not sitesi haline getirip çevrim içi bir not defteri geliştirmeyi planlıyorum. Tabii zamanla tasarım da değişikliğe uğrayacaktır. Bu şekilde boş zamanlarımda uğraş olması için kendime icat çıkartıyorum. 

Tüm bunların haricinde ise Şems([@akseyh](https://twitter.com/akseyh)) ile yeni bir projeye giriştik ve yeni bir ürün çıkarmaya odaklanıyoruz. Eski enerjime dönmek ümidiyle bu paragraf burada sonlansın.

Büyük ihtimal bu serinin bir sonraki yazısını Sakarya'daki evimde çalışma odamda yazıyor olacağım. O zaman böyle dolu dolu paylaşım yaparız ki blogu da yakında çoğunlukla kişisel yazılar üzerine dönecek gibi. Çünkü bolca yazıp içimi dökmek istiyorum. Geleceğe bir şeyler bırakmak gerek. 

Ayrıca tüm bu süreçler bittikten sonra da [Twitter](https://twitter.com/beratbozkurt0)'a yoğunlaşıp biraz tanınırlığı arttırıp network geliştirmek istiyorum. 

Yazmakta zorlandığımı da söylemeden geçmek istemiyor ve esenlikler diliyorum. Sevgiler!]]></summary>
        <content type="html"><![CDATA[
Yoğun geçen ve geçmekte olan bir sürecin ardından bir blog yazmak için bilgisayara oturdum. Ramazan'ın 2. günü ve dışarıdaki yoğun rüzgarlardan dolayı elektrik kesintisini verimli ana geçirmek istedim. Bundan dolayı da açtım VS Code'u yazmaya başladım. Eveett bugün neler yaptığımı ve aklımda neler olduğunu sizlere dökeceğim. Eh hadi başlayalım madem. 

OSF Digital'e yeni girmiştim ve yaklaşık 5 ayım oldu. Trial period sürecini atlayıp terfi alarak çalışmaya devam ediyorum. Bu süreçte her şey çok güzel gidiyor ve biraz daha dolu dolu geçmesi için atılkan olup daha fazla aktif olmak istiyorum. Bu şekilde hem kişisel gelişimimi hem ingilizcemi hem de teknik becerilerimi geliştirmeyi hedefliyorum. Aynı zamanda büyük bir şirket olduğundan dolayı da oturmuş bir düzen var ve tüm süreçlerin nasıl işlediğini çok iyi bir şekilde öğrenmiş, benimsemiş ve aşina olmuş oluyorum. 

Bir diğer tarafta ise nişanlandım ve yaza düğünüm var. Beyaz eşyadır, mutfak araç gereçleridir, ev arayışıdır gibi tatlı telaşlarımız var. Tabii bi o kadar da stresli bir süreç. Bir an önce tüm bu hazırlıklar bitsin de artık yeni hayatımıza başlayalım diyor insan. Bununla birlikte ev ile ilgili olan her şeye aşina olmaya başladım. Belki yakında teknoloji kanalı açıp hangi süpürge alınmalı hangi ütü alınnmalı diye bir video çekerim(!)

Takip edenlerin bildiği üzere blogu **Gatsby** ile geliştirmiştim ve alacağımı aldıktan sonra teknolojiyi değiştirdim. Teknoloji olarak tüm yapıyı **Next.js**'e geçtim ve artık geliştirmeleri buradan devam edeceğim. Bu şekilde blogu bir not sitesi haline getirip çevrim içi bir not defteri geliştirmeyi planlıyorum. Tabii zamanla tasarım da değişikliğe uğrayacaktır. Bu şekilde boş zamanlarımda uğraş olması için kendime icat çıkartıyorum. 

Tüm bunların haricinde ise Şems([@akseyh](https://twitter.com/akseyh)) ile yeni bir projeye giriştik ve yeni bir ürün çıkarmaya odaklanıyoruz. Eski enerjime dönmek ümidiyle bu paragraf burada sonlansın.

Büyük ihtimal bu serinin bir sonraki yazısını Sakarya'daki evimde çalışma odamda yazıyor olacağım. O zaman böyle dolu dolu paylaşım yaparız ki blogu da yakında çoğunlukla kişisel yazılar üzerine dönecek gibi. Çünkü bolca yazıp içimi dökmek istiyorum. Geleceğe bir şeyler bırakmak gerek. 

Ayrıca tüm bu süreçler bittikten sonra da [Twitter](https://twitter.com/beratbozkurt0)'a yoğunlaşıp biraz tanınırlığı arttırıp network geliştirmek istiyorum. 

Yazmakta zorlandığımı da söylemeden geçmek istemiyor ve esenlikler diliyorum. Sevgiler!]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Özetle 2021]]></title>
        <id>https://beratbozkurt.net/blog/ozetle-2021</id>
        <link href="https://beratbozkurt.net/blog/ozetle-2021"/>
        <updated>2021-12-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
1 yıldır bu blogu kullanıyorum ve açtığım zamanlar yine yılın son günleriydi. O zaman **[Yıllardan 2020 idi...](http://localhost:3000/blog/yillardan-2020-idi/)** yazısını yayınlamıştım. Bu sefer ise 2021 için bir yazı yazma vakti geldi ve bu satırları yazıyorum. Öhö öhö neyse uzatmayalım. Hadi devam edelim. 

## Hayat

Dünyalar güzeli bir kızla tanıştım ve daha önce tatmadığım duygular hissediyorum. Birçok şeyimi paylaştım ve yakın zamanda da hayatımı paylaşacağım. Güzel günler yakın :)

yaklaşık 1.5 yıldır çalışmış olduğum işten ayrılarak **OSF Digital** ile yeni bir yolculuğa başladım. Şirket içindeki dilin **İngilizce** olması ise benim için ayrı bir macera ve zorluk oluyor. Mesaiden sonraki yorgunluk, anlatılamaz... Ama bir yandan da planladığım kariyer hedefimi uyguladığım için mutluyum. 

Üniversite hayatımı bitirdim sayılır. Tüm derslerimden geçerek okulla olan ilişkimi bitirdim. Bu şekilde artık öğrencilik hayatımı da sonlandırmış oldum. 

## 13 tane yazı yazdım

Galiba yılda ortalma 13 yazı yazıyorum. Bir önceki sene de aynı şekilde olmuştu. Bu sene de geleneği bozmadık ve 13 tane yazı yayınlamışım. Artık ingilizce içerik üretmiyorum. İyi mi yapıyorum? Yapmıyorumdur büyük ihtimal ama onun yerine farklı şeylerle ilgileniyorum.

Şimdi gelin eskiden yeni doğru yazdığım yazıları linkleyelim.
- [Hadi Yelken Açalım Yeni Deneyimlere](https://beratbozkurt.net/blog/hadi-yelken-acalim-yeni-deneyimlere/)
- [Neler Yapıyorum? Aklımda Neler Var? #1](https://beratbozkurt.net/blog/neler-yapiyorum-aklimda-neler-var-1/)
- [React Uygulamasına Test Yazalım #1](https://beratbozkurt.net/blog/react-uygulamasina-test-yazalim-1/)
- [İzledim: Hayattan Bir Gün (Belgesel)](https://beratbozkurt.net/blog/izledim-hayattan-bir-gun/)
- [Kendime Kodlar: Typescript](https://beratbozkurt.net/blog/kendime-kodlar-typescript/)
- [Aklımda Kalsın: React'ta Hataları Yakalayalım](https://beratbozkurt.net/blog/aklimda-kalsin-reactta-hatalari-yakalayalim/)
- [Git Sildiğin Değişikliği Geri Getir](https://beratbozkurt.net/blog/git-sildigin-degisikligi-geri-getirmek/)
- [Bu Blog Artık Açık Kaynak](https://beratbozkurt.net/blog/kisisel-blogumun-kodlari-acik-kaynak/)
- [Neler Yapıyorum? Aklımda Neler Var? #2](https://beratbozkurt.net/blog/neler-yapiyorum-aklimda-neler-var-2/)
- [Bana Feedback Ver!](https://beratbozkurt.net/blog/bana-feedback-ver/)
- [Yazılıma Nasıl Başlanılmamalı](https://beratbozkurt.net/blog/yazilima-nasil-baslanilmamali/)
- [Neler Kullanıyorum](https://beratbozkurt.net/blog/neler-kullaniyorum/)
- [Nasıl Araştırma Yapıyorum](https://beratbozkurt.net/blog/nasil-arastirma-yapiyorum/)

## Github'da 5 proje paylaştım

<Image alt="" src="/posts/ozetle-2021/github.png" width="783" height="209" />

Tam zamanlı bir işte çalıştığımdan dolayı çok fazla proje üretip projelere destek olamıyorum. Aslında 2'si özel toplam 7 proje paylaştım. Onların çoğu da case çalışmalardı. Yapmış olduğum bu case'leri ise genelde bilmediğim teknolojiler kullanarak öğrenme sürecimi devam ettirmiş oldum. Önümüzdeki sene ise bir projeye destek olmayı planlıyorum. Bu seneyi de bu şekilde geçiririm gibi. Hayırlısı...

<h3>Blogun Kaynak Kodları</h3>

Şu anda olduğunuz blogun kaynak kodlarını paylaştım. İlk defa **Gatsby** kullandığım için kendime özel bir tema ile şekillendirmek istedim. Sonucunda ise böyle bir sonuç ortaya çıktı. Bknz: [https://github.com/berat/homepage](https://github.com/berat/homepage)

<h3>Görsel Arama Projesi</h3>

İlk defa **Typescript** kullandığım bir proje. Aynı zamanda ise seviyemi gösterdiğine inandığım bir proje. Çünkü önceki zamanlarda paylaştığım projeler biraz daha **javascript** dünyasında ilk zamanlarımdı. Bu proje ise case'lerden biri. Bknz: [https://github.com/berat/hipo-case/tree/master/src](https://github.com/berat/hipo-case/tree/master/src)

<h3>Gatsby Unsplash Plugin</h3>

Blogumda [fotoğraflarımı](https://beratbozkurt.net/photos) paylaşmak için [Unsplash](https://unsplash.com/beratbozkurt0) kullanmaya karar verdim. Bundan dolayı da eksik olan bir ihtiyacı gidermek için **Gatsby**'e bir plugin yazdım. Bknz: [https://github.com/berat/gatsby-unsplash](https://github.com/berat/gatsby-unsplash) 

<h3>Angular Example</h3>

İlk defa Angular kullanmış olduğum projeyi yine aynı zamanda profilimde paylaştım. Benim için güzel bir deneyim oldu. Yine case'lerden biri. Bknz: [https://github.com/berat/angular-example](https://github.com/berat/angular-example)

Daha fazlası için beklerim [https://github.com/berat](https://github.com/berat)

<h2>Farkındalık, İlkler, Beğenilmek</h2>


<Tweet id="1425043594453430273" />


<Tweet id="1376188569153376259" />

<Tweet id="1374805180689100809" />

Eh hadi öyleyse **2022'ye Merhaba!**]]></summary>
        <content type="html"><![CDATA[
1 yıldır bu blogu kullanıyorum ve açtığım zamanlar yine yılın son günleriydi. O zaman **[Yıllardan 2020 idi...](http://localhost:3000/blog/yillardan-2020-idi/)** yazısını yayınlamıştım. Bu sefer ise 2021 için bir yazı yazma vakti geldi ve bu satırları yazıyorum. Öhö öhö neyse uzatmayalım. Hadi devam edelim. 

## Hayat

Dünyalar güzeli bir kızla tanıştım ve daha önce tatmadığım duygular hissediyorum. Birçok şeyimi paylaştım ve yakın zamanda da hayatımı paylaşacağım. Güzel günler yakın :)

yaklaşık 1.5 yıldır çalışmış olduğum işten ayrılarak **OSF Digital** ile yeni bir yolculuğa başladım. Şirket içindeki dilin **İngilizce** olması ise benim için ayrı bir macera ve zorluk oluyor. Mesaiden sonraki yorgunluk, anlatılamaz... Ama bir yandan da planladığım kariyer hedefimi uyguladığım için mutluyum. 

Üniversite hayatımı bitirdim sayılır. Tüm derslerimden geçerek okulla olan ilişkimi bitirdim. Bu şekilde artık öğrencilik hayatımı da sonlandırmış oldum. 

## 13 tane yazı yazdım

Galiba yılda ortalma 13 yazı yazıyorum. Bir önceki sene de aynı şekilde olmuştu. Bu sene de geleneği bozmadık ve 13 tane yazı yayınlamışım. Artık ingilizce içerik üretmiyorum. İyi mi yapıyorum? Yapmıyorumdur büyük ihtimal ama onun yerine farklı şeylerle ilgileniyorum.

Şimdi gelin eskiden yeni doğru yazdığım yazıları linkleyelim.
- [Hadi Yelken Açalım Yeni Deneyimlere](https://beratbozkurt.net/blog/hadi-yelken-acalim-yeni-deneyimlere/)
- [Neler Yapıyorum? Aklımda Neler Var? #1](https://beratbozkurt.net/blog/neler-yapiyorum-aklimda-neler-var-1/)
- [React Uygulamasına Test Yazalım #1](https://beratbozkurt.net/blog/react-uygulamasina-test-yazalim-1/)
- [İzledim: Hayattan Bir Gün (Belgesel)](https://beratbozkurt.net/blog/izledim-hayattan-bir-gun/)
- [Kendime Kodlar: Typescript](https://beratbozkurt.net/blog/kendime-kodlar-typescript/)
- [Aklımda Kalsın: React'ta Hataları Yakalayalım](https://beratbozkurt.net/blog/aklimda-kalsin-reactta-hatalari-yakalayalim/)
- [Git Sildiğin Değişikliği Geri Getir](https://beratbozkurt.net/blog/git-sildigin-degisikligi-geri-getirmek/)
- [Bu Blog Artık Açık Kaynak](https://beratbozkurt.net/blog/kisisel-blogumun-kodlari-acik-kaynak/)
- [Neler Yapıyorum? Aklımda Neler Var? #2](https://beratbozkurt.net/blog/neler-yapiyorum-aklimda-neler-var-2/)
- [Bana Feedback Ver!](https://beratbozkurt.net/blog/bana-feedback-ver/)
- [Yazılıma Nasıl Başlanılmamalı](https://beratbozkurt.net/blog/yazilima-nasil-baslanilmamali/)
- [Neler Kullanıyorum](https://beratbozkurt.net/blog/neler-kullaniyorum/)
- [Nasıl Araştırma Yapıyorum](https://beratbozkurt.net/blog/nasil-arastirma-yapiyorum/)

## Github'da 5 proje paylaştım

<Image alt="" src="/posts/ozetle-2021/github.png" width="783" height="209" />

Tam zamanlı bir işte çalıştığımdan dolayı çok fazla proje üretip projelere destek olamıyorum. Aslında 2'si özel toplam 7 proje paylaştım. Onların çoğu da case çalışmalardı. Yapmış olduğum bu case'leri ise genelde bilmediğim teknolojiler kullanarak öğrenme sürecimi devam ettirmiş oldum. Önümüzdeki sene ise bir projeye destek olmayı planlıyorum. Bu seneyi de bu şekilde geçiririm gibi. Hayırlısı...

<h3>Blogun Kaynak Kodları</h3>

Şu anda olduğunuz blogun kaynak kodlarını paylaştım. İlk defa **Gatsby** kullandığım için kendime özel bir tema ile şekillendirmek istedim. Sonucunda ise böyle bir sonuç ortaya çıktı. Bknz: [https://github.com/berat/homepage](https://github.com/berat/homepage)

<h3>Görsel Arama Projesi</h3>

İlk defa **Typescript** kullandığım bir proje. Aynı zamanda ise seviyemi gösterdiğine inandığım bir proje. Çünkü önceki zamanlarda paylaştığım projeler biraz daha **javascript** dünyasında ilk zamanlarımdı. Bu proje ise case'lerden biri. Bknz: [https://github.com/berat/hipo-case/tree/master/src](https://github.com/berat/hipo-case/tree/master/src)

<h3>Gatsby Unsplash Plugin</h3>

Blogumda [fotoğraflarımı](https://beratbozkurt.net/photos) paylaşmak için [Unsplash](https://unsplash.com/beratbozkurt0) kullanmaya karar verdim. Bundan dolayı da eksik olan bir ihtiyacı gidermek için **Gatsby**'e bir plugin yazdım. Bknz: [https://github.com/berat/gatsby-unsplash](https://github.com/berat/gatsby-unsplash) 

<h3>Angular Example</h3>

İlk defa Angular kullanmış olduğum projeyi yine aynı zamanda profilimde paylaştım. Benim için güzel bir deneyim oldu. Yine case'lerden biri. Bknz: [https://github.com/berat/angular-example](https://github.com/berat/angular-example)

Daha fazlası için beklerim [https://github.com/berat](https://github.com/berat)

<h2>Farkındalık, İlkler, Beğenilmek</h2>


<Tweet id="1425043594453430273" />


<Tweet id="1376188569153376259" />

<Tweet id="1374805180689100809" />

Eh hadi öyleyse **2022'ye Merhaba!**]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Nasıl Araştırma Yapıyorum]]></title>
        <id>https://beratbozkurt.net/blog/nasil-arastirma-yapiyorum</id>
        <link href="https://beratbozkurt.net/blog/nasil-arastirma-yapiyorum"/>
        <updated>2021-12-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
Günümüzde herkes yazılımcı olmaya karar verir ama önemli olan devamını getirebilmek. Çünkü birçok kişi bu karardan geri döner. Eh tabi böyle olunca da tüm bu heves ve istek birden sönüverir. Ama diyelim ki siz onlardan biri değilsiniz hatta yazılımda belli bir konuma geldiniz. Ha siz şöyle gelin bakalım. Kahvenizi/Çayınızı almanız için bekliyorum sizi. Hadi bir sonraki paragrafta görüşürüz.

Günlük hayatta kullandığımız bir çok şeyi ezbere yapamayız veyahut bilmediğimiz bir konuda öğrenme sürecimizin olması gerekir. Bu noktada doğru bir araştırma yaparak istediğimiz sonuca erkenden ulaşmamız gerekir. Bu erken sonuca oluşanca kısa sürede bilgiye ulaşıyoruz. Ama bir yandan da araştırma yaparken edinen bilgilerden uzaklaşmış oluyoruz. Hadi tüm bunları bir yere bırakalım ve elinizde bir sorun olduğunu ve bunu mümkün olduğunca kısa sürede çözmeniz gerektiğini varsayalım. 

1- Google'da araştırmak. <br />
2- Hazır bir paketse döküman sayfasına göz atmak.<br />
3- Github'ta ilgili repolarda ve issue'larda gezinmek.<br />
4- Her şeyi bırakın ve sorundan uzaklaşarak.<br />

Nelerden bahsedeceğimi kısacık bahsettiğime göre ilk maddeden başlayalım mı?

# Google'ı etkili bir şekilde kullanmak.

Öncelikle Türkçe aramalardan uzak kalmakta fayda var. Tamam kabul ediyorum. Eğer çok genel ve yaygın bir konu hakkında araştırma yapıyorsanız kullanabilirsiniz. Ama aksi durumda İngilizce aramak işinizi daha da kolaylaştıracaktır. Yeri gelmişken Türkçe aramasına örnek vermek isterim.

<Image alt="" src="/posts/nasil-arastirma-yapiyorum/image-1.png" width="658" height="351" />

Bu araştırmalarla daha hızlı çözüme ulaşırsınız. Kullanın, eyvallah. Ama ingilizceniz kötüyse siz direkt ingilizceye yönelin. Daha da rahat hissedecekseniz ilerleyen zamanlarda. 

Bundan sonrası ingilizce araştırmalar hakkında bahsedeceğim. Öncelikle eğer yapmanız gereken bir kısmı nasıl yapacağınızı bilmiyorsanız. Şöyle bir arama işinizi kurtaracaktır. Hadi gelin **inputta otamatik tamamlama nasıl yapılır** öğrenelim. 

<Image alt="" src="/posts/nasil-arastirma-yapiyorum/image-2.png" width="644" height="342" />

Bu şekilde nasıl yapıldığına dair onlarca sitelere ulaşabiliriz. Stackoverflow'u duymuşsunuzdur. Eğer yok ben stackoverflow haricinde başka siteye gitmem, orada araştırmak istiyorum derseniz de buyrun. 

<Image alt="" src="/posts/nasil-arastirma-yapiyorum/image-3.png" width="755" height="314" />

O kadar site baktınız ama hepsi *jQuery* ile alakalı. Ama siz illa *javascript* ile yapmak istiyorsunuz. O halde gelin *javascript* kelimesi geçen siteleri filtreleyelim. Bu şekilde arama ekranında çıkan sonuçlarda mutlaka **Javascript** geçen bir kelimeyi koyu şekilde göreceksiniz.

<Image alt="" src="/posts/nasil-arastirma-yapiyorum/image-4.png" width="657" height="267" />

Son çıkan bir versiyondan dolayı hata alıyorsunuz. Bu hatayı çözmek için de son zamanlarda paylaşılan içeriklere göz atmak istiyorsanız. Öyleyse gelin kolay bir şekilde tarihe göre filtreleyelim. Google'a araştırmanız gerekeni yazdıktan sonra sırasıyla **Araçlar > Herhangi bir zaman > "Tarihi Seç"** adımlarını izleyebilirsiniz.

<Image alt="" src="/posts/nasil-arastirma-yapiyorum/image-5.png" width="724" height="319" />

# Döküman sayfasına göz atmak.

Yukarıda bahsettiğim gibi döküman sitesini **inurl:** içine yazarak kolay bir şekilde bulabilirsiniz. Ayrıca direkt döküman sayfasına gidip menülerden veyahut arama bölümünden ulaşabilirsiniz. Burada önerebileceğim pek spesifik örneğin yok. Gayet basit, kısa ve net.

# Github'ta repo ve issue içerisinde kaybolmak.

Burada son zamanlarda akıl ettiğim bir yöntemden bahsedeceğim. Ama yoookk öyle hemen değil, okumaya devam ediniz efenim.

Bir paket kullanıyorsunuz diyelim. Hadi bu **moment** paketi olsun. Ama bu paketi nasıl kullanmanız gerektiği hakkında bir bilginiz yok. Öncelikle **Readme** dosyasını dikkatlice okumanız gerekmektedir. Genellikle orada nasıl kullanılması gerektiği hakkında bir bölüm olur.

Orada kullanımı hakkında bir bölüm gördünüz ve denediniz. Ama bir sorun var çalışmıyor. Şimdi hemen sayfayı kapatmayın da bekleyin. İlk adım issue'lara gidip neler yazılmış edilmiş araştırılmalı. 

Moment ile tarihi formatlamak için bir şeyler yaptın ama çalışmadı. O yüzden issue sayfasında arama yaparak filtreleyebilirsiniz. İnsanların sormuş olduğu soruları süzerek atılan cevaplardan cevabınızı bulabilirsiniz. Bazı zamanlar bu şekilde çözüme daha çabuk ulaşılırken bazı zamanlar dipsiz kuyuya inme hissi uyandırılıyor. 

> Burada bir ipucu vermek isterim. Genelde basit sorunları kapatılan issue'larda daha rahat bulabilirsiniz. 

<Image alt="" src="/posts/nasil-arastirma-yapiyorum/image-6.png" width="934" height="379" />

Evveettt, ilk başta dediğim yönteme gelebiliriz. Öhö öhö! Son zamanlarda test yazmak ile ilgili araştırmalar yapıyorum. Araştırmalar sonucunda aslında fonksiyon olsun, paketin kullanımı olsun hepsi testlerde anlatılmaktadır. Sonuçta teste bekelenen bir değer var. Bu şekilde çözüme hızlı bir şekilde ulaşılmaktadır. Hemen bir örnekle anlatalım.

Elimde olan bir tarihe 8 dakika daha eklemek istiyorum. Ama bunu nasıl yaparım bir fikrim yok. O kadar araştırma yaptım ama sonuca ulaşamadım. Tamam sakinleşin, repoyu açın, test dosyalarını bulun, ilgili testi açın ve kodu okuyun. Aha işte bulduk. "Vay arkadaş bu kadar kolay mı bu" dediğinizi duyar gibiyim. Evet aslında öyleymiş :)

<Image alt="" src="/posts/nasil-arastirma-yapiyorum/image-7.png" width="552" height="450" />

> Kodu açıklama gereği duymuyordum ama not geçeyim istedim. ilk parametre yapılan işlem, ikinci parametre beklenen sonuç, üçüncü parametre ise yapılan işlemin tanımı.

# Sonuca ulaşamadın mı? Hadi mola vakti!

Bir soruna uzun zaman maruz kalmak bir süre sonra insanı kör eder derecesine getiriyor. Aslında biraz ara vermek size çok iyi gelecektir. Böylelikle dinç bir şekilde sorunun derinliklerine inip aslında çözümü şu olmalı diyeceksiniz ve çözüme gideceksiniz. 

Hem kendinizi de bu kadar yormayın yav. Güzel bir şarkı açın, arkanıza yaslanın ve uzaklara dalın. O da ne? Çözümü buldun, bak. Eeee bazen hiç beklemediğiniz anda aklınıza gelir!

Uyumadan önce bir şeyler karalamak istedim. Bu yazıyı yazma fikrim ise twitter'da dolaşırken böyle bir tweet atılmıştı. Ben de bildiklerim blogla paylaşmak istedim. 

*O tweeti yazıya ekleyecektim ama bulamadım. O yüzden ekleyemiyorum.*

Esenlikle kalınız efenim. Yine bekleriz!]]></summary>
        <content type="html"><![CDATA[
Günümüzde herkes yazılımcı olmaya karar verir ama önemli olan devamını getirebilmek. Çünkü birçok kişi bu karardan geri döner. Eh tabi böyle olunca da tüm bu heves ve istek birden sönüverir. Ama diyelim ki siz onlardan biri değilsiniz hatta yazılımda belli bir konuma geldiniz. Ha siz şöyle gelin bakalım. Kahvenizi/Çayınızı almanız için bekliyorum sizi. Hadi bir sonraki paragrafta görüşürüz.

Günlük hayatta kullandığımız bir çok şeyi ezbere yapamayız veyahut bilmediğimiz bir konuda öğrenme sürecimizin olması gerekir. Bu noktada doğru bir araştırma yaparak istediğimiz sonuca erkenden ulaşmamız gerekir. Bu erken sonuca oluşanca kısa sürede bilgiye ulaşıyoruz. Ama bir yandan da araştırma yaparken edinen bilgilerden uzaklaşmış oluyoruz. Hadi tüm bunları bir yere bırakalım ve elinizde bir sorun olduğunu ve bunu mümkün olduğunca kısa sürede çözmeniz gerektiğini varsayalım. 

1- Google'da araştırmak. <br />
2- Hazır bir paketse döküman sayfasına göz atmak.<br />
3- Github'ta ilgili repolarda ve issue'larda gezinmek.<br />
4- Her şeyi bırakın ve sorundan uzaklaşarak.<br />

Nelerden bahsedeceğimi kısacık bahsettiğime göre ilk maddeden başlayalım mı?

# Google'ı etkili bir şekilde kullanmak.

Öncelikle Türkçe aramalardan uzak kalmakta fayda var. Tamam kabul ediyorum. Eğer çok genel ve yaygın bir konu hakkında araştırma yapıyorsanız kullanabilirsiniz. Ama aksi durumda İngilizce aramak işinizi daha da kolaylaştıracaktır. Yeri gelmişken Türkçe aramasına örnek vermek isterim.

<Image alt="" src="/posts/nasil-arastirma-yapiyorum/image-1.png" width="658" height="351" />

Bu araştırmalarla daha hızlı çözüme ulaşırsınız. Kullanın, eyvallah. Ama ingilizceniz kötüyse siz direkt ingilizceye yönelin. Daha da rahat hissedecekseniz ilerleyen zamanlarda. 

Bundan sonrası ingilizce araştırmalar hakkında bahsedeceğim. Öncelikle eğer yapmanız gereken bir kısmı nasıl yapacağınızı bilmiyorsanız. Şöyle bir arama işinizi kurtaracaktır. Hadi gelin **inputta otamatik tamamlama nasıl yapılır** öğrenelim. 

<Image alt="" src="/posts/nasil-arastirma-yapiyorum/image-2.png" width="644" height="342" />

Bu şekilde nasıl yapıldığına dair onlarca sitelere ulaşabiliriz. Stackoverflow'u duymuşsunuzdur. Eğer yok ben stackoverflow haricinde başka siteye gitmem, orada araştırmak istiyorum derseniz de buyrun. 

<Image alt="" src="/posts/nasil-arastirma-yapiyorum/image-3.png" width="755" height="314" />

O kadar site baktınız ama hepsi *jQuery* ile alakalı. Ama siz illa *javascript* ile yapmak istiyorsunuz. O halde gelin *javascript* kelimesi geçen siteleri filtreleyelim. Bu şekilde arama ekranında çıkan sonuçlarda mutlaka **Javascript** geçen bir kelimeyi koyu şekilde göreceksiniz.

<Image alt="" src="/posts/nasil-arastirma-yapiyorum/image-4.png" width="657" height="267" />

Son çıkan bir versiyondan dolayı hata alıyorsunuz. Bu hatayı çözmek için de son zamanlarda paylaşılan içeriklere göz atmak istiyorsanız. Öyleyse gelin kolay bir şekilde tarihe göre filtreleyelim. Google'a araştırmanız gerekeni yazdıktan sonra sırasıyla **Araçlar > Herhangi bir zaman > "Tarihi Seç"** adımlarını izleyebilirsiniz.

<Image alt="" src="/posts/nasil-arastirma-yapiyorum/image-5.png" width="724" height="319" />

# Döküman sayfasına göz atmak.

Yukarıda bahsettiğim gibi döküman sitesini **inurl:** içine yazarak kolay bir şekilde bulabilirsiniz. Ayrıca direkt döküman sayfasına gidip menülerden veyahut arama bölümünden ulaşabilirsiniz. Burada önerebileceğim pek spesifik örneğin yok. Gayet basit, kısa ve net.

# Github'ta repo ve issue içerisinde kaybolmak.

Burada son zamanlarda akıl ettiğim bir yöntemden bahsedeceğim. Ama yoookk öyle hemen değil, okumaya devam ediniz efenim.

Bir paket kullanıyorsunuz diyelim. Hadi bu **moment** paketi olsun. Ama bu paketi nasıl kullanmanız gerektiği hakkında bir bilginiz yok. Öncelikle **Readme** dosyasını dikkatlice okumanız gerekmektedir. Genellikle orada nasıl kullanılması gerektiği hakkında bir bölüm olur.

Orada kullanımı hakkında bir bölüm gördünüz ve denediniz. Ama bir sorun var çalışmıyor. Şimdi hemen sayfayı kapatmayın da bekleyin. İlk adım issue'lara gidip neler yazılmış edilmiş araştırılmalı. 

Moment ile tarihi formatlamak için bir şeyler yaptın ama çalışmadı. O yüzden issue sayfasında arama yaparak filtreleyebilirsiniz. İnsanların sormuş olduğu soruları süzerek atılan cevaplardan cevabınızı bulabilirsiniz. Bazı zamanlar bu şekilde çözüme daha çabuk ulaşılırken bazı zamanlar dipsiz kuyuya inme hissi uyandırılıyor. 

> Burada bir ipucu vermek isterim. Genelde basit sorunları kapatılan issue'larda daha rahat bulabilirsiniz. 

<Image alt="" src="/posts/nasil-arastirma-yapiyorum/image-6.png" width="934" height="379" />

Evveettt, ilk başta dediğim yönteme gelebiliriz. Öhö öhö! Son zamanlarda test yazmak ile ilgili araştırmalar yapıyorum. Araştırmalar sonucunda aslında fonksiyon olsun, paketin kullanımı olsun hepsi testlerde anlatılmaktadır. Sonuçta teste bekelenen bir değer var. Bu şekilde çözüme hızlı bir şekilde ulaşılmaktadır. Hemen bir örnekle anlatalım.

Elimde olan bir tarihe 8 dakika daha eklemek istiyorum. Ama bunu nasıl yaparım bir fikrim yok. O kadar araştırma yaptım ama sonuca ulaşamadım. Tamam sakinleşin, repoyu açın, test dosyalarını bulun, ilgili testi açın ve kodu okuyun. Aha işte bulduk. "Vay arkadaş bu kadar kolay mı bu" dediğinizi duyar gibiyim. Evet aslında öyleymiş :)

<Image alt="" src="/posts/nasil-arastirma-yapiyorum/image-7.png" width="552" height="450" />

> Kodu açıklama gereği duymuyordum ama not geçeyim istedim. ilk parametre yapılan işlem, ikinci parametre beklenen sonuç, üçüncü parametre ise yapılan işlemin tanımı.

# Sonuca ulaşamadın mı? Hadi mola vakti!

Bir soruna uzun zaman maruz kalmak bir süre sonra insanı kör eder derecesine getiriyor. Aslında biraz ara vermek size çok iyi gelecektir. Böylelikle dinç bir şekilde sorunun derinliklerine inip aslında çözümü şu olmalı diyeceksiniz ve çözüme gideceksiniz. 

Hem kendinizi de bu kadar yormayın yav. Güzel bir şarkı açın, arkanıza yaslanın ve uzaklara dalın. O da ne? Çözümü buldun, bak. Eeee bazen hiç beklemediğiniz anda aklınıza gelir!

Uyumadan önce bir şeyler karalamak istedim. Bu yazıyı yazma fikrim ise twitter'da dolaşırken böyle bir tweet atılmıştı. Ben de bildiklerim blogla paylaşmak istedim. 

*O tweeti yazıya ekleyecektim ama bulamadım. O yüzden ekleyemiyorum.*

Esenlikle kalınız efenim. Yine bekleriz!]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Neler Kullanıyorum]]></title>
        <id>https://beratbozkurt.net/blog/neler-kullaniyorum</id>
        <link href="https://beratbozkurt.net/blog/neler-kullaniyorum"/>
        <updated>2021-11-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
Bu aralar iş değişikliği durumu olduğundan dolayı bilgisayarımı sıfırlayacaktım. Kullandığım ayarları ve bazı konfigurasyonları not ederken bunları neden paylaşmıyorum diye kendime sordum. Dolayısıyla oturup hemen bu satırları yazıyorum. Ayrıca gatsby ile tema yapmadan önce araştırmalar yaparken böyle yazılar çok fazla görüyordum. Bu iş değişikliği benim için buna vesile olmuş oldu.

# MacOS'ta Neler Kullanıyorum

Çalışırken Macbook ile birlikte harici monitör, klavye ve mouse kullanıyorum. Öncelikle her gün ilk gördüğüm ekranın ne olduğunu ve hangi uygulamalarımı kullandığımı göstereyim.

<Image alt="homepage" src="/posts/neler-kullaniyorum/homepage.png" width="1631" height="901" />

Anasayfayı çok basit tutmaya özen gösteriyorum. İlgili olan dosya türlerini de grupluyorum. Bu şekilde aradıklarımı daha kolay ulaşıp kalabalık olmasını önlemiş oluyorum.

Klasör olarak da kişisel projelerimi **www**, iş ile ilgili olan proje, döküman ve dosyaları **works** ve bunların haricindeki olan işleri de **Folder** ile tutmaktayım. Mesai saatler içerisnde **works** klasörü sürekli açıkken mesaiden sonra **www** klasörü yoğun kullanıyorum.

<Image alt="Launchpad 1. Sayfa" src="/posts/neler-kullaniyorum/launchpad-1.png" width="1440" height="900" />

Launchpad ekranını ise çok fazla ziyaret etmiyorum. Ama orayı da elden geçirip hemen ulaşmak istediğim ve nadirde olsa kullandıklarımı buraya attım. MacOS'ta varsayılan olarak gelenleri bir klasör içinde tutarak diğerlerini rastgele yerleştirdim. Bir diğer sayfasında ise çok nadir kullandıklarımı yerleştirdim ki bir şeyleri ararken zorlanmayayım.

<Image alt="Launchpad 2. Sayfa" src="/posts/neler-kullaniyorum/launchpad-2.png" width="1440" height="900"/>

Şimdi gelelim hangi uygulamarı neden kullanıyorum. Eğer varsa konfigurasyonlarım nasıl, hep birlikte bakalım.

- **Visual Studio Code:** Şimdiye denediğim birkaç editörden sonra seçtiğim editör oldu. Konfigurasyon dosyası için buyrun: [Gist](https://gist.github.com/berat/f80cd04e25956b5afc5fa118a549521b)
- **iTerm:** Terminal olarak bence en iyisi. Konfigurasyon için [gist](https://gist.github.com/berat/9175cdd3ca6f593f9777cec73e11f008)
- **Spark:** Birkaç mailimi ekleyip hepsini birden yönetebiliyorum.
- **Fantastical 2:** Takvim ile ilgili tüm işlerimi buradan yönetiyorum.
- **Bartender 3:** Menü bar'da bir süre sonra çok fazla uygulama gözüktüğü zaman rahatsız oluyorum. Bu şekilde kullanmadıklarımı gizleyebiliyorum.
- **Raycast:** Spotlight alternatifi olarak bu uygulamayı kullanıyorum. Bu uygulamanın güzelliği nedir? <br />
  -Yaklaşan bir toplantım olması halinde bu ekranı açarak hemencik katılabiliyorum.<br />
  -Hesap yapmak için sadece 2 + 2 yazmam gerekli. Cevabın 5 olduğunu bana söylüyor(!). Aynı şekilde döviz hesaplamalarını da kolayca yapabiliyorum.<br />
  -Sıklıkla uğradığım linkleri kısayol atayıp çok hızlı bir şekilde giriş yapabiliyorum. <br />
  ve daha fazlası...
- **Mos:** Harici bir mouse kullandığımdan dolayı scroll hareketinin smooth ve ters-tüz durumları için kullanıyorum.
- **Unsplash Wallpapers:** Arasıra arkplan resminden sıkılıyorum. Bunun için uygulamanın bana önerdiği görsellerden birini beğenip kullanıyorum.

# iPhone'da Neler Kullanıyorum

iPhone yeni geçtiğimden dolayı yeni uygulamalar araşındayım. O yüzden temel olarak kullandığım uygulamalar şöyledir.

<Image alt="page 1" src="/posts/neler-kullaniyorum/phone-1.png" width="414" height="916" />

Gördüğünüz üzere iPhone ile varsayılan olarak gelen uygulamaların hepsi burada yer almaktadır. Bunlardan hariç olarak Spark'ı görüyorsunuz. Bilgisayarımda da kullandığımdan dolayı tek tıkla tüm hesaplarımı yine olduğu gibi telefonda da kullanabiliyorum. Bu şekilde herhangi bir hesap girişimi yapmama gerek kalmıyor. 

Ayrıca widget'larda gördüğünüz gibi hava durumu ve kur takip uygulamasını koydum. Bu şekilde uygulamaya girmeden hızlı bir bakış atabiliyorum. gün içerisinde sıklıkla baktığım yerleri bu şekilde widget olarak eklemek kulanım kolaylığı sağlıyor

<Image alt="page 2" src="/posts/neler-kullaniyorum/phone-2.png" width="414" height="916" />

Bir diğer sayfada ise günümün en çok zamanı geçirdiğim sayfa. Sosyal medya uygulamaları, bankalar, oyun... Herkesin bildiği uygulamalar haricinde ben ekstra olarak neler kullanıyorum gelin bakalım.

- **Notion:** Büyük çapta notlarımı notion üzerinde tutuyorum. Bu şekilde daha kalıcı olmuş oluyor. Basit ve todo gibi işlerimi Apple'ın varsayılan not uygulamasıyla daha hızlı hallediyorum.
- **Lightroom:** iPhone'a geçiş sebebimin ilk maddesidir. Fotoğrafçılığa karşı ilgim var. Aynı zamanda çektiğim fotoğrafları da düzenlemeyi çok seviyorum. O yüzden olmazsa olmazlardan lightroom'dur.
- **Dualingo:** Ara sıra dil pratikleri yaptığım uygulama. Bu aralar biraz boşlamış olabilirim
- **Moov:** Bazen araç kiralamak gerekiyor. Bu uygulama ile çok hızlı ve güvenilir bir şekilde araç kiralama işlemi yapabiliyorum.
- **Midas:** Yeni üye olduğum ve gerek Türkiye gerekse Amerika'daki şirketlere yatırım yapabiliyorsun. Şu an sadece analiz ve araştırma aşamasındayım.

Ekstra MacOS kullanacak kişiler için bir tavsiye vereyim. Logitech Mouse M510 işinizi çok fazla kolaylayacaktır. Ekran geçişleri olsun, geri gitme olsun, butonları özelleştirebiliyorsunuz. 

Şimdi bilgisayara format atabiliriz :)]]></summary>
        <content type="html"><![CDATA[
Bu aralar iş değişikliği durumu olduğundan dolayı bilgisayarımı sıfırlayacaktım. Kullandığım ayarları ve bazı konfigurasyonları not ederken bunları neden paylaşmıyorum diye kendime sordum. Dolayısıyla oturup hemen bu satırları yazıyorum. Ayrıca gatsby ile tema yapmadan önce araştırmalar yaparken böyle yazılar çok fazla görüyordum. Bu iş değişikliği benim için buna vesile olmuş oldu.

# MacOS'ta Neler Kullanıyorum

Çalışırken Macbook ile birlikte harici monitör, klavye ve mouse kullanıyorum. Öncelikle her gün ilk gördüğüm ekranın ne olduğunu ve hangi uygulamalarımı kullandığımı göstereyim.

<Image alt="homepage" src="/posts/neler-kullaniyorum/homepage.png" width="1631" height="901" />

Anasayfayı çok basit tutmaya özen gösteriyorum. İlgili olan dosya türlerini de grupluyorum. Bu şekilde aradıklarımı daha kolay ulaşıp kalabalık olmasını önlemiş oluyorum.

Klasör olarak da kişisel projelerimi **www**, iş ile ilgili olan proje, döküman ve dosyaları **works** ve bunların haricindeki olan işleri de **Folder** ile tutmaktayım. Mesai saatler içerisnde **works** klasörü sürekli açıkken mesaiden sonra **www** klasörü yoğun kullanıyorum.

<Image alt="Launchpad 1. Sayfa" src="/posts/neler-kullaniyorum/launchpad-1.png" width="1440" height="900" />

Launchpad ekranını ise çok fazla ziyaret etmiyorum. Ama orayı da elden geçirip hemen ulaşmak istediğim ve nadirde olsa kullandıklarımı buraya attım. MacOS'ta varsayılan olarak gelenleri bir klasör içinde tutarak diğerlerini rastgele yerleştirdim. Bir diğer sayfasında ise çok nadir kullandıklarımı yerleştirdim ki bir şeyleri ararken zorlanmayayım.

<Image alt="Launchpad 2. Sayfa" src="/posts/neler-kullaniyorum/launchpad-2.png" width="1440" height="900"/>

Şimdi gelelim hangi uygulamarı neden kullanıyorum. Eğer varsa konfigurasyonlarım nasıl, hep birlikte bakalım.

- **Visual Studio Code:** Şimdiye denediğim birkaç editörden sonra seçtiğim editör oldu. Konfigurasyon dosyası için buyrun: [Gist](https://gist.github.com/berat/f80cd04e25956b5afc5fa118a549521b)
- **iTerm:** Terminal olarak bence en iyisi. Konfigurasyon için [gist](https://gist.github.com/berat/9175cdd3ca6f593f9777cec73e11f008)
- **Spark:** Birkaç mailimi ekleyip hepsini birden yönetebiliyorum.
- **Fantastical 2:** Takvim ile ilgili tüm işlerimi buradan yönetiyorum.
- **Bartender 3:** Menü bar'da bir süre sonra çok fazla uygulama gözüktüğü zaman rahatsız oluyorum. Bu şekilde kullanmadıklarımı gizleyebiliyorum.
- **Raycast:** Spotlight alternatifi olarak bu uygulamayı kullanıyorum. Bu uygulamanın güzelliği nedir? <br />
  -Yaklaşan bir toplantım olması halinde bu ekranı açarak hemencik katılabiliyorum.<br />
  -Hesap yapmak için sadece 2 + 2 yazmam gerekli. Cevabın 5 olduğunu bana söylüyor(!). Aynı şekilde döviz hesaplamalarını da kolayca yapabiliyorum.<br />
  -Sıklıkla uğradığım linkleri kısayol atayıp çok hızlı bir şekilde giriş yapabiliyorum. <br />
  ve daha fazlası...
- **Mos:** Harici bir mouse kullandığımdan dolayı scroll hareketinin smooth ve ters-tüz durumları için kullanıyorum.
- **Unsplash Wallpapers:** Arasıra arkplan resminden sıkılıyorum. Bunun için uygulamanın bana önerdiği görsellerden birini beğenip kullanıyorum.

# iPhone'da Neler Kullanıyorum

iPhone yeni geçtiğimden dolayı yeni uygulamalar araşındayım. O yüzden temel olarak kullandığım uygulamalar şöyledir.

<Image alt="page 1" src="/posts/neler-kullaniyorum/phone-1.png" width="414" height="916" />

Gördüğünüz üzere iPhone ile varsayılan olarak gelen uygulamaların hepsi burada yer almaktadır. Bunlardan hariç olarak Spark'ı görüyorsunuz. Bilgisayarımda da kullandığımdan dolayı tek tıkla tüm hesaplarımı yine olduğu gibi telefonda da kullanabiliyorum. Bu şekilde herhangi bir hesap girişimi yapmama gerek kalmıyor. 

Ayrıca widget'larda gördüğünüz gibi hava durumu ve kur takip uygulamasını koydum. Bu şekilde uygulamaya girmeden hızlı bir bakış atabiliyorum. gün içerisinde sıklıkla baktığım yerleri bu şekilde widget olarak eklemek kulanım kolaylığı sağlıyor

<Image alt="page 2" src="/posts/neler-kullaniyorum/phone-2.png" width="414" height="916" />

Bir diğer sayfada ise günümün en çok zamanı geçirdiğim sayfa. Sosyal medya uygulamaları, bankalar, oyun... Herkesin bildiği uygulamalar haricinde ben ekstra olarak neler kullanıyorum gelin bakalım.

- **Notion:** Büyük çapta notlarımı notion üzerinde tutuyorum. Bu şekilde daha kalıcı olmuş oluyor. Basit ve todo gibi işlerimi Apple'ın varsayılan not uygulamasıyla daha hızlı hallediyorum.
- **Lightroom:** iPhone'a geçiş sebebimin ilk maddesidir. Fotoğrafçılığa karşı ilgim var. Aynı zamanda çektiğim fotoğrafları da düzenlemeyi çok seviyorum. O yüzden olmazsa olmazlardan lightroom'dur.
- **Dualingo:** Ara sıra dil pratikleri yaptığım uygulama. Bu aralar biraz boşlamış olabilirim
- **Moov:** Bazen araç kiralamak gerekiyor. Bu uygulama ile çok hızlı ve güvenilir bir şekilde araç kiralama işlemi yapabiliyorum.
- **Midas:** Yeni üye olduğum ve gerek Türkiye gerekse Amerika'daki şirketlere yatırım yapabiliyorsun. Şu an sadece analiz ve araştırma aşamasındayım.

Ekstra MacOS kullanacak kişiler için bir tavsiye vereyim. Logitech Mouse M510 işinizi çok fazla kolaylayacaktır. Ekran geçişleri olsun, geri gitme olsun, butonları özelleştirebiliyorsunuz. 

Şimdi bilgisayara format atabiliriz :)]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Yazılıma Nasıl Başlanılmamalı]]></title>
        <id>https://beratbozkurt.net/blog/yazilima-nasil-baslanilmamali</id>
        <link href="https://beratbozkurt.net/blog/yazilima-nasil-baslanilmamali"/>
        <updated>2021-10-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
Elimden geldiğince çevremdekileri yazılım öğretmeyi ve bir işin ucundan tutmayı aşılıyorum. Eğer birisi öğrenme sürecinde ise de ona elimden gelen desteği gösteriyorum. Gerekse üniversitede gerekse çevremdeki insanları incelediğimde bir kaç yanlış durum görüyorum, kanaatimce. Bu yazıda bunlardan bahsetmek istiyorum. 

<h3>Her şey yazılım değildir</h3>

Eğer yazılım öğrenmeyi kafanıza koymuşsanız, her şeyin yazılımdan ibaret olmadığını bilmelisiniz. Sabah akşam yazılım öğrenerek belki bir yere gelebilirsiniz ama sadece bir yere kadar. Önemli olan iletişim becerilerinizi de geliştirmek, yazılım ekosisteminde rahat bir şekilde konuşmak, öğrendiğini paylaşmak, iyi bir okuyucu ve problem çözücü olmak... ve daha bir çok şey. Aynı zamanda kendinizi bu alanlarda da geliştirmeniz gerekmektedir. 

Sırtımı yaslar kodumu yazar geçerim diyerek bu meslek icraat edilmez, edilebilir ama edilemez. Ne kadar kod yazıyorsanız o kadar da **kod okumasını** bilmeniz ve problemleri o denli çözmeniz gerekmektedir. Sonuçta bizim işimiz **problem çözmektir**. Problem çözmek için de sorunu iyi anlayıp onu iyi bir şekilde analiz etmeliyiz. Analizler sonucunda araştırmalar yapıp çok fazla kod incelemek, edindiğimiz bilgileri de takım arkadaşlarıyla paylaşmamız gerekmektedir. Bu şekilde ortaya daha iyi bir ürün ortaya çıkarabiliriz.

<h3>Öğrendiklerini kendine saklama</h3>

Yazılım öğrenme süreci çok güzel gidiyor. Her gün yeni şeyler öğreniyorsun ve kendini geliştiriyorsun. *Peki kendine neden bir blog tutmuyorsun? Ya da neden kendine bir youtube kanalı açmıyorsun?* Öğrendiklerini başklarıyla paylaşsan ve onları da öğrenme sürecine dahil etsen daha iyi bir ilerleme kaydetmez misin? 

Öğrendiklerini paylaşmak insanlara ben bunları öğrendim ve bir sonraki yazımda da şunları öğreneceğim demenin bir yoludur. Yazdıkça ya da video çektikçe çevre de edinmiş olursun. Herhangi bir durumda sorabileceğin, tartışacağın insanlar olacaktır. Veyahut herhangi bir ihtiyaçta sana bir mesaj atacak kişiler olmuş olacaktır. 

<h3>Projecik değil proje oluştur</h3>

Herhangi bir dil öğrenirken zaten her zaman proje yapacaksındır. Bu projeler; hesap makinesi, to-do uygulaması olacaktır genelde. Bu projeleri zaten yap. Ama aslında önemli olan büyük çapta bir proje yapıp ne gibi sorunlarla karşılacağını ve o **sorunlara nasıl yaklaşacağını** bilmen gerekir. Bunu en iyi öğrenme şekli de aslında gerçek anlamda bir proje yapmaktan geçiyor. Eğer çevrenizde sizin gibi birileri varsa beraber ekipçe çalışmak daha da iyi olacaktır. 

Yaptığınız projeleri pazarlamayı da öğrenmeniz gerekmektedir. Projeleri açık kaynak yapacaksanız eğer zaten github, gitlab üzerinden paylaşırsınız. Bunun için o araçları iyi ve doğru bir şekilde kullanıp insanların kolayca incelemesine olanak sağlayabilirsiniz. Projeyi geliştirirken öğrendiklerini, hatalarını **blog olarak yazıp paylaşmayı** da unutma. 


<h3>Kendini pazarlamayı unutma</h3>

Yazılım öğreniyorsun ama kim seni biliyor? Ya da kim bu sürecine ortak? Eğer amaç sadece hobi olarak yazılım öğrenmek değilse kendini de pazarlamalısın. Kendini pazarlamalısın çünkü profesyonel olarak bu işi yapmaya başlayacağın zaman tüm bu yaptıklarının önemi çok büyük olacak ve sana bir basamak görevi görecektir.  

Bu bağlamda twitter, github, linkedin gibi araçları aktif bir şekilde kullanıp kendini öne atman gerekmektedir. Bu sosyal mecralarını özgün ve dolu bir şekilde kullanmaya da özen göster. 


<h3>Her şeyi öğrenme</h3>

Tüm teknoloji oturup öğrenmekle uğraşma. Bazılarını sonraya sakla. Çünkü her proje geliştirdiğinde yeni şeyler öğreniyorsun. Büyük ihtimal zamanında bıraktığın teknolojileri o zaman kullanmak zorunda kalacaksın. Gerçek bir projede de kullanıp öğrenmiş olacaksın. Böylelikle geçmişte zaman kaybetmemiş olursun. 

Peki neleri öğrenmeliyim? diye soruyorsan şöyle bir ipucu vermek isterim. Seçtiğin title'a göre iş ilanlarını incele. En çok hangi teknolojiyi istiyorlarsa onları öğrenmeye başla. 

Bu konuda kendimden örnek vermek istiyorum. Geçmişte öğrenmek istediğim çok şey oldu ama çoğuna bakmadım bile. Çünkü o zaman yapmam gereken projeler vardı ve yeni bir teknoloji öğrenmeme fırsatım yoktu. Şu an yaptığım study case'lerde bilmediğim teknolojileri gerçek bir proje üzerinde kullanıp öğrenmiş oluyorum. Öğrenme sürecimi de bu şekilde devam ettiriyorum.


<hr />

Aslında tüm bunları yaptıktan sonra yeterli bir noktaya geldiğinde iş teklifleri almaya başlayacaksın. Bu şekilde iş başvurusunda bulunmak yerine sana gelen teklifleri değerlendirip istediğin işi kabul edip o projede çalışma fırsatı bulacaksın. Kendimizi şunu sormamız gerekiyor. **İşlere başvurup kendimi beğendirmek mi yoksa gelen tekliflerden beğendiğimi kabul etmek mi?**
]]></summary>
        <content type="html"><![CDATA[
Elimden geldiğince çevremdekileri yazılım öğretmeyi ve bir işin ucundan tutmayı aşılıyorum. Eğer birisi öğrenme sürecinde ise de ona elimden gelen desteği gösteriyorum. Gerekse üniversitede gerekse çevremdeki insanları incelediğimde bir kaç yanlış durum görüyorum, kanaatimce. Bu yazıda bunlardan bahsetmek istiyorum. 

<h3>Her şey yazılım değildir</h3>

Eğer yazılım öğrenmeyi kafanıza koymuşsanız, her şeyin yazılımdan ibaret olmadığını bilmelisiniz. Sabah akşam yazılım öğrenerek belki bir yere gelebilirsiniz ama sadece bir yere kadar. Önemli olan iletişim becerilerinizi de geliştirmek, yazılım ekosisteminde rahat bir şekilde konuşmak, öğrendiğini paylaşmak, iyi bir okuyucu ve problem çözücü olmak... ve daha bir çok şey. Aynı zamanda kendinizi bu alanlarda da geliştirmeniz gerekmektedir. 

Sırtımı yaslar kodumu yazar geçerim diyerek bu meslek icraat edilmez, edilebilir ama edilemez. Ne kadar kod yazıyorsanız o kadar da **kod okumasını** bilmeniz ve problemleri o denli çözmeniz gerekmektedir. Sonuçta bizim işimiz **problem çözmektir**. Problem çözmek için de sorunu iyi anlayıp onu iyi bir şekilde analiz etmeliyiz. Analizler sonucunda araştırmalar yapıp çok fazla kod incelemek, edindiğimiz bilgileri de takım arkadaşlarıyla paylaşmamız gerekmektedir. Bu şekilde ortaya daha iyi bir ürün ortaya çıkarabiliriz.

<h3>Öğrendiklerini kendine saklama</h3>

Yazılım öğrenme süreci çok güzel gidiyor. Her gün yeni şeyler öğreniyorsun ve kendini geliştiriyorsun. *Peki kendine neden bir blog tutmuyorsun? Ya da neden kendine bir youtube kanalı açmıyorsun?* Öğrendiklerini başklarıyla paylaşsan ve onları da öğrenme sürecine dahil etsen daha iyi bir ilerleme kaydetmez misin? 

Öğrendiklerini paylaşmak insanlara ben bunları öğrendim ve bir sonraki yazımda da şunları öğreneceğim demenin bir yoludur. Yazdıkça ya da video çektikçe çevre de edinmiş olursun. Herhangi bir durumda sorabileceğin, tartışacağın insanlar olacaktır. Veyahut herhangi bir ihtiyaçta sana bir mesaj atacak kişiler olmuş olacaktır. 

<h3>Projecik değil proje oluştur</h3>

Herhangi bir dil öğrenirken zaten her zaman proje yapacaksındır. Bu projeler; hesap makinesi, to-do uygulaması olacaktır genelde. Bu projeleri zaten yap. Ama aslında önemli olan büyük çapta bir proje yapıp ne gibi sorunlarla karşılacağını ve o **sorunlara nasıl yaklaşacağını** bilmen gerekir. Bunu en iyi öğrenme şekli de aslında gerçek anlamda bir proje yapmaktan geçiyor. Eğer çevrenizde sizin gibi birileri varsa beraber ekipçe çalışmak daha da iyi olacaktır. 

Yaptığınız projeleri pazarlamayı da öğrenmeniz gerekmektedir. Projeleri açık kaynak yapacaksanız eğer zaten github, gitlab üzerinden paylaşırsınız. Bunun için o araçları iyi ve doğru bir şekilde kullanıp insanların kolayca incelemesine olanak sağlayabilirsiniz. Projeyi geliştirirken öğrendiklerini, hatalarını **blog olarak yazıp paylaşmayı** da unutma. 


<h3>Kendini pazarlamayı unutma</h3>

Yazılım öğreniyorsun ama kim seni biliyor? Ya da kim bu sürecine ortak? Eğer amaç sadece hobi olarak yazılım öğrenmek değilse kendini de pazarlamalısın. Kendini pazarlamalısın çünkü profesyonel olarak bu işi yapmaya başlayacağın zaman tüm bu yaptıklarının önemi çok büyük olacak ve sana bir basamak görevi görecektir.  

Bu bağlamda twitter, github, linkedin gibi araçları aktif bir şekilde kullanıp kendini öne atman gerekmektedir. Bu sosyal mecralarını özgün ve dolu bir şekilde kullanmaya da özen göster. 


<h3>Her şeyi öğrenme</h3>

Tüm teknoloji oturup öğrenmekle uğraşma. Bazılarını sonraya sakla. Çünkü her proje geliştirdiğinde yeni şeyler öğreniyorsun. Büyük ihtimal zamanında bıraktığın teknolojileri o zaman kullanmak zorunda kalacaksın. Gerçek bir projede de kullanıp öğrenmiş olacaksın. Böylelikle geçmişte zaman kaybetmemiş olursun. 

Peki neleri öğrenmeliyim? diye soruyorsan şöyle bir ipucu vermek isterim. Seçtiğin title'a göre iş ilanlarını incele. En çok hangi teknolojiyi istiyorlarsa onları öğrenmeye başla. 

Bu konuda kendimden örnek vermek istiyorum. Geçmişte öğrenmek istediğim çok şey oldu ama çoğuna bakmadım bile. Çünkü o zaman yapmam gereken projeler vardı ve yeni bir teknoloji öğrenmeme fırsatım yoktu. Şu an yaptığım study case'lerde bilmediğim teknolojileri gerçek bir proje üzerinde kullanıp öğrenmiş oluyorum. Öğrenme sürecimi de bu şekilde devam ettiriyorum.


<hr />

Aslında tüm bunları yaptıktan sonra yeterli bir noktaya geldiğinde iş teklifleri almaya başlayacaksın. Bu şekilde iş başvurusunda bulunmak yerine sana gelen teklifleri değerlendirip istediğin işi kabul edip o projede çalışma fırsatı bulacaksın. Kendimizi şunu sormamız gerekiyor. **İşlere başvurup kendimi beğendirmek mi yoksa gelen tekliflerden beğendiğimi kabul etmek mi?**
]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Bana Feedback Ver!]]></title>
        <id>https://beratbozkurt.net/blog/bana-feedback-ver</id>
        <link href="https://beratbozkurt.net/blog/bana-feedback-ver"/>
        <updated>2021-08-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
Yorgun ve yoğun geçen günlerin ardından tekrar yazmak güzel. Son zamanlarda kitap okumaya başladım ve ondan mütevellit yazma heyecanı oluştu. O yüzden iki gündür ne yazsam diye düşünüyordum. Etkisini gördüğüm ve önerdiğim bir konu üzerine yazmak istedim. Konumuz feedback almak. Hazırsanız hadi başlayalım.

Daha yolun başındaysanız "*acaba ne öğrenmem gerekiyor?Hangi yönlerim zayıf? Bu konu hakkında nasılım?*" gibi sorular sormaya başlıyorsunuz. Bu noktada çalıştığınız insanlardan feedback almak etkili oluyor. 

Tabii feedback aldığınız her kişi sizi olumlu anlamda yorumlayabilir. O yüzden sizi açık açık yermesini söyleyebilirsiniz. Çünkü bu şekilde eksik yönlerinizi görüp ona göre yol çizmeniz kolaylaşıyor. Ayrıca bu şekilde dışarıdan nasıl biri olduğunuzu anlamayı da kolaylaştırıyor diyebilirim. 

Sonuçta bir takım çalışmasının içinde olduğumuzdan dolayı insanlarla ilişkisinden tutun yazdığınız kodun okunabilirliğine kadar olan tüm konular önem arz etmektedir. Çünkü aynı pencerede eksiksiz ve doğru bir şekilde olmak önemlidir. Bundan dolayı belki eksik olduğunuz bir yönünüzden farkında olmayabilirsiniz. Dışarıdan bir görüşü öğrenmek her zaman etkili olacaktır. 

Şimdiye kadar yaptığım görüşmelerde ise bir kaç şirket kötü olan yanımı veya feedback alıp almadığımı sordular. Böylelikle işe alacak arkadaşları daha iyi tanımaya çalışıyorlar ve önem veriyorlar. 

Velhasıl kelam, feedback verme ve alma kültürümüzün olması lazım. Bu şekilde ortamımızı ve geleceğimizi daha iyi bir şekilde inşa edip huzurlu ve güzel bir şekilde hayat sürebiliriz. 

Esenlikler efenim...]]></summary>
        <content type="html"><![CDATA[
Yorgun ve yoğun geçen günlerin ardından tekrar yazmak güzel. Son zamanlarda kitap okumaya başladım ve ondan mütevellit yazma heyecanı oluştu. O yüzden iki gündür ne yazsam diye düşünüyordum. Etkisini gördüğüm ve önerdiğim bir konu üzerine yazmak istedim. Konumuz feedback almak. Hazırsanız hadi başlayalım.

Daha yolun başındaysanız "*acaba ne öğrenmem gerekiyor?Hangi yönlerim zayıf? Bu konu hakkında nasılım?*" gibi sorular sormaya başlıyorsunuz. Bu noktada çalıştığınız insanlardan feedback almak etkili oluyor. 

Tabii feedback aldığınız her kişi sizi olumlu anlamda yorumlayabilir. O yüzden sizi açık açık yermesini söyleyebilirsiniz. Çünkü bu şekilde eksik yönlerinizi görüp ona göre yol çizmeniz kolaylaşıyor. Ayrıca bu şekilde dışarıdan nasıl biri olduğunuzu anlamayı da kolaylaştırıyor diyebilirim. 

Sonuçta bir takım çalışmasının içinde olduğumuzdan dolayı insanlarla ilişkisinden tutun yazdığınız kodun okunabilirliğine kadar olan tüm konular önem arz etmektedir. Çünkü aynı pencerede eksiksiz ve doğru bir şekilde olmak önemlidir. Bundan dolayı belki eksik olduğunuz bir yönünüzden farkında olmayabilirsiniz. Dışarıdan bir görüşü öğrenmek her zaman etkili olacaktır. 

Şimdiye kadar yaptığım görüşmelerde ise bir kaç şirket kötü olan yanımı veya feedback alıp almadığımı sordular. Böylelikle işe alacak arkadaşları daha iyi tanımaya çalışıyorlar ve önem veriyorlar. 

Velhasıl kelam, feedback verme ve alma kültürümüzün olması lazım. Bu şekilde ortamımızı ve geleceğimizi daha iyi bir şekilde inşa edip huzurlu ve güzel bir şekilde hayat sürebiliriz. 

Esenlikler efenim...]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Neler Yapıyorum? Aklımda Neler Var? #2]]></title>
        <id>https://beratbozkurt.net/blog/neler-yapiyorum-aklimda-neler-var-2</id>
        <link href="https://beratbozkurt.net/blog/neler-yapiyorum-aklimda-neler-var-2"/>
        <updated>2021-07-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
Yazmayalı uzzuuun zaman oldu. Böyle olunca da yazarken zorlanıyorum. Ekstra olarakta şu giriş yazılarını yazmayı hala beceremiyorum. Öhö öhö, neyse hadi başlayalım

# Neler yapıyorum?

Üniversite ile olan işlerimi pratikte bitirdim. Çünkü finallerimi de bitirip okul hayatımı şimdilik bitirdim. Pratikte mezun olduğumu söyleyebilirim. Sadece teknik olarak mezun değilim. O yüzden yoğun bir dönemi geride bıraktım ve bundan sonrası istediğim şekilde yönetebileceğim bir zaman. 

Şu anki şirketimde yaklaşık olarak 11. ayım ve kariyer hedeflerim doğrultusunda iş değiştirme girişimi içerisindeyim. Bu doğrultu da gelen teklifleri değerlendirip bu hedeflere doğru emin bir adım atmak istiyorum. Bu şekilde olunca da haliyle zamanım biraz stresli geçiyor. Çünkü bu iş ile tam zamanlı çalışma düzenine geçeceğim ve bir düzen kurmam gerekecek. 

Eskisi kadar yeni proje geliştiremiyorum ve mesaiden sonra kendi gelişimim için çok fazla bir şey yapmıyorum. Genelde kafa dağıtmaya yönelik aktiviteler yapıyorum.

Hayatımda daha önce tatmadığım bir duyguyu tadıyorum ve bu bana inanılmaz şekilde bir enerji veriyor. Galiba çok mutluyum :)

Daha önce mobil uygulamalarımı markete gönderip orada birkaç şey deneyeceğimi söylemiştim. Bunun için daha önceden geliştirdiğim mobil uygulamalar üzerinden gördüğüm eksik kısımlarını giderip olması gereken özellikleri hazır hale getiriyorum. Bu kısmı biraz ağırdan alıyorum. Çünkü gerekli motivasyonum henüz yok. 

Bu süre zarfında bir kaç mülakata girip istenilen projeleri yaparken kendimi geliştiriyorum. Kendimi nasıl geliştiriyorum? Benden istenen projeleri daha önceden kullanmadığım araçları/teknolojileri kullanarak geliştiriyorum. Bu şekilde öğrenme sürecimi aynı anda yürütmüş oluyorum. 

Mülakatlara girdiğimi söyledim. Bu sayede kendimi daha iyi bir şekilde ifade edip hangi konularda eksiğimin olduğunu görüp mülakat tecrübesi ediniyorum. Bunu da gelişim olarak sayabiliriz :)


# Neler Yapacağım?

Sektörden insanlarla görüşmeler yaptığımı söylemiştim ama bu geçtiğimiz süre boyunca bunu aksattım. Tekrardan bu görüşmelere devam edip yeni insanlar tanımak istiyorum. 

Teknik ingilizce olarak kendimi geliştirmeye çalışacağım. Bu noktada yaptığım tüm işlerde ingilizce kullanamya özen göstereceğim. Tabii ki özen göstermek yeterli olmuyor. Bununla birlikte araştırma da yapacağım. Bu şekilde hem kelime bilgimi arttırıp hem de teknik olarak kendimi daha doğru ve güzel bir şekilde ifade edebileceğim. 

Yapabildiğim kadar blog içeriklerine devam etmek istiyorum. Edindiğim tecrübeleri, öğrendiğim yeni bilgileri ve düşüncelerimi aktaracağım. ]]></summary>
        <content type="html"><![CDATA[
Yazmayalı uzzuuun zaman oldu. Böyle olunca da yazarken zorlanıyorum. Ekstra olarakta şu giriş yazılarını yazmayı hala beceremiyorum. Öhö öhö, neyse hadi başlayalım

# Neler yapıyorum?

Üniversite ile olan işlerimi pratikte bitirdim. Çünkü finallerimi de bitirip okul hayatımı şimdilik bitirdim. Pratikte mezun olduğumu söyleyebilirim. Sadece teknik olarak mezun değilim. O yüzden yoğun bir dönemi geride bıraktım ve bundan sonrası istediğim şekilde yönetebileceğim bir zaman. 

Şu anki şirketimde yaklaşık olarak 11. ayım ve kariyer hedeflerim doğrultusunda iş değiştirme girişimi içerisindeyim. Bu doğrultu da gelen teklifleri değerlendirip bu hedeflere doğru emin bir adım atmak istiyorum. Bu şekilde olunca da haliyle zamanım biraz stresli geçiyor. Çünkü bu iş ile tam zamanlı çalışma düzenine geçeceğim ve bir düzen kurmam gerekecek. 

Eskisi kadar yeni proje geliştiremiyorum ve mesaiden sonra kendi gelişimim için çok fazla bir şey yapmıyorum. Genelde kafa dağıtmaya yönelik aktiviteler yapıyorum.

Hayatımda daha önce tatmadığım bir duyguyu tadıyorum ve bu bana inanılmaz şekilde bir enerji veriyor. Galiba çok mutluyum :)

Daha önce mobil uygulamalarımı markete gönderip orada birkaç şey deneyeceğimi söylemiştim. Bunun için daha önceden geliştirdiğim mobil uygulamalar üzerinden gördüğüm eksik kısımlarını giderip olması gereken özellikleri hazır hale getiriyorum. Bu kısmı biraz ağırdan alıyorum. Çünkü gerekli motivasyonum henüz yok. 

Bu süre zarfında bir kaç mülakata girip istenilen projeleri yaparken kendimi geliştiriyorum. Kendimi nasıl geliştiriyorum? Benden istenen projeleri daha önceden kullanmadığım araçları/teknolojileri kullanarak geliştiriyorum. Bu şekilde öğrenme sürecimi aynı anda yürütmüş oluyorum. 

Mülakatlara girdiğimi söyledim. Bu sayede kendimi daha iyi bir şekilde ifade edip hangi konularda eksiğimin olduğunu görüp mülakat tecrübesi ediniyorum. Bunu da gelişim olarak sayabiliriz :)


# Neler Yapacağım?

Sektörden insanlarla görüşmeler yaptığımı söylemiştim ama bu geçtiğimiz süre boyunca bunu aksattım. Tekrardan bu görüşmelere devam edip yeni insanlar tanımak istiyorum. 

Teknik ingilizce olarak kendimi geliştirmeye çalışacağım. Bu noktada yaptığım tüm işlerde ingilizce kullanamya özen göstereceğim. Tabii ki özen göstermek yeterli olmuyor. Bununla birlikte araştırma da yapacağım. Bu şekilde hem kelime bilgimi arttırıp hem de teknik olarak kendimi daha doğru ve güzel bir şekilde ifade edebileceğim. 

Yapabildiğim kadar blog içeriklerine devam etmek istiyorum. Edindiğim tecrübeleri, öğrendiğim yeni bilgileri ve düşüncelerimi aktaracağım. ]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Bu Blog Artık Açık Kaynak]]></title>
        <id>https://beratbozkurt.net/blog/kisisel-blogumun-kodlari-acik-kaynak</id>
        <link href="https://beratbozkurt.net/blog/kisisel-blogumun-kodlari-acik-kaynak"/>
        <updated>2021-03-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
Yeni teknoloji öğrenirken mutlaka proje yaparak pratik yaparım. Çünkü bu şekilde pratik yaptıktan sonra öğrendiğin bilgilerin kalıcı hale geldiğini düşünüyorum. 

Uzun zamandır **[Gatsby](https://www.gatsbyjs.com/)** öğrenme arzum vardı ve bir türlü fırsat bulamıyordum. Bir noktadan sonra öğrendiğim bilgileri paylaşma isteği duydu ve kendime bir kişisel blog oluşturma kararı aldım. Aslında ilk başlarda **Next.js** ile geliştirme düşüncesi vardı ama yeni bir *challenge* olması için gatsby ile yapmaya başladım. Projeyi hedeflediğim noktaya getirdiğim zaman paylaşmayı planlıyordum. Bu zamana kadar ise tasarımı kullanmak isteyen bir kaç kişiden mesaj aldım ve hatta geçen günlerde bunu twitter'da paylaştım.

<Tweet id="1374805180689100809" />



Her neyse, velhasıl kelam...

Blogu kodlamaya başlamadan önce herhangi bir tasarım çizmedim. [Starter-blog](https://www.gatsbyjs.com/starters/gatsbyjs/gatsby-starter-blog) ile başladım ve yavaş yavaş yol kattetim. Öncesinde basit bir tasarım ortaya çıktı ve nabzı yoklamış oldum. Daha sonrasında ise şu anki görünümünü aldı. Ayrıca gtmetrix sonuçları ise şu şekilde

<Image alt="Gtmetrix" src="/posts/kisisel-blogumun-kodlari-acik-kaynak/cover.png" width="1219" height="447" />


## Temada neler var?
- Blog yazılarını markdown ile oluşturuyorsun.
- Favori projelerini sitenin anasayfasında gösterebiliyorsun.
- Flickr'da paylaştığın fotoğrafları aynı zamanda burada da paylaşabiliyorsun.
- Dileyen ziyaretçin karanlık temayıda kullanabilir.
- Twitter'da paylaştığın zaman gelen cevapları o yazının altında gözüksün diye Webmention.io desteği.

Aslında bu yazıyı çok fazla uzatmak istemiyorum. Çünkü Github üzerinde oluşturduğum Readme dosyasında detayları görebilirsiniz. 

## Kaynak Kodlar

Eğer katkıda bulunmak isterseniz çekinmeyin lütfen. Her PR ve issue'lara açığım. Eğer kendi blogun için kullanacaksan bana bir selam göndermeyi unutma :)

[Repo'ya git](https://github.com/berat/homepage)]]></summary>
        <content type="html"><![CDATA[
Yeni teknoloji öğrenirken mutlaka proje yaparak pratik yaparım. Çünkü bu şekilde pratik yaptıktan sonra öğrendiğin bilgilerin kalıcı hale geldiğini düşünüyorum. 

Uzun zamandır **[Gatsby](https://www.gatsbyjs.com/)** öğrenme arzum vardı ve bir türlü fırsat bulamıyordum. Bir noktadan sonra öğrendiğim bilgileri paylaşma isteği duydu ve kendime bir kişisel blog oluşturma kararı aldım. Aslında ilk başlarda **Next.js** ile geliştirme düşüncesi vardı ama yeni bir *challenge* olması için gatsby ile yapmaya başladım. Projeyi hedeflediğim noktaya getirdiğim zaman paylaşmayı planlıyordum. Bu zamana kadar ise tasarımı kullanmak isteyen bir kaç kişiden mesaj aldım ve hatta geçen günlerde bunu twitter'da paylaştım.

<Tweet id="1374805180689100809" />



Her neyse, velhasıl kelam...

Blogu kodlamaya başlamadan önce herhangi bir tasarım çizmedim. [Starter-blog](https://www.gatsbyjs.com/starters/gatsbyjs/gatsby-starter-blog) ile başladım ve yavaş yavaş yol kattetim. Öncesinde basit bir tasarım ortaya çıktı ve nabzı yoklamış oldum. Daha sonrasında ise şu anki görünümünü aldı. Ayrıca gtmetrix sonuçları ise şu şekilde

<Image alt="Gtmetrix" src="/posts/kisisel-blogumun-kodlari-acik-kaynak/cover.png" width="1219" height="447" />


## Temada neler var?
- Blog yazılarını markdown ile oluşturuyorsun.
- Favori projelerini sitenin anasayfasında gösterebiliyorsun.
- Flickr'da paylaştığın fotoğrafları aynı zamanda burada da paylaşabiliyorsun.
- Dileyen ziyaretçin karanlık temayıda kullanabilir.
- Twitter'da paylaştığın zaman gelen cevapları o yazının altında gözüksün diye Webmention.io desteği.

Aslında bu yazıyı çok fazla uzatmak istemiyorum. Çünkü Github üzerinde oluşturduğum Readme dosyasında detayları görebilirsiniz. 

## Kaynak Kodlar

Eğer katkıda bulunmak isterseniz çekinmeyin lütfen. Her PR ve issue'lara açığım. Eğer kendi blogun için kullanacaksan bana bir selam göndermeyi unutma :)

[Repo'ya git](https://github.com/berat/homepage)]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Git Sildiğin Değişikliği Geri Getir!]]></title>
        <id>https://beratbozkurt.net/blog/git-sildigin-degisikligi-geri-getirmek</id>
        <link href="https://beratbozkurt.net/blog/git-sildigin-degisikligi-geri-getirmek"/>
        <updated>2021-02-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
Yaklaşık bir saat önce yeni birkaç özellik yazdım ve o arada git pull yapmadığım için git push yaparken hata verdi. Onları kurtarayım derken yaptığım değişiklikler gitti. Bu gibi senaryolarda yapacak bir şey yok deyip yeniden yazamya başlardım. Ama bu sefer, belki bir yol vardır diye google yolunu tuttum.

Eğer yaptığınız değişikliği `git add` yaptıysanız dosyalar hashlenmiş oluyor. Bu demek oluyor ki git bunu sizin yerinize tutuyor. Ki git'in olayı da bu değil midir? Sonra anlamadığınız şekilde bir şeyler oldu, yaptınız ve bir takım olaylar gelişti. Değişiklikleriniz gitti. Sakin ol ve derin bir nefes alıp yazıyı okumaya devam et.

```bash
  git fsck --lost-found
```
bu kodu kullanarak hashlenmiş olan önceki değişikliği geri getirin. Bu kodu yazdıktan sonra size aşağıdaki gibi bir çıktı oluşturuyor. Aslında bu çıktının aynısı `.git/lost-found` klasörü içinde de kayıt ediyor.

```bash
Checking object directories: 100% (256/256), done.
dangling commit 42fd85940eb2f76f32d4be5ac2d4b***********
dangling commit 831acdb7115a6284f6e969ac90c7f***********
dangling tree 8cc268a3f48c08cd95329fcd73cc306***********
dangling commit ef7fe1814a47fbf89cbcbb1ce39e4***********
```

Çok güzel, yaptığımız değişikliklerin hash'lerine ulaşmış olduk. Şimdi `git cat-file` diye bir komuttan yardım alacağız. Bu kod kısacası, yapılan değişikliklerin içerik, tür ve boyut bilgilerini sağlıyor. 

Önce geri getirmek istediğimiz değişikliğin hangisi olduğunu öğrenmek istiyoruz. Bunun için aşağıdaki kodu yazıp commit mesajınıza bakarak doğru bir hash olduğunu doğrulayabilirsiniz. 

> **ef7fe181** ifadesi yukarıdaki hash çıktılarının ilk 7 hanesidir.

```bash
➜ git cat-file -p ef7fe181
tree dafb6a5fabb658210e2fa1534670f6***********
parent 84da27f33676589e46711ad35468***********
author Berat Bozkurt <beratbozkurt1999@gmail.com> 1614455618 +0300
committer Berat Bozkurt <beratbozkurt1999@gmail.com> 1614455618 +0300

upload files
```

Daha sonra ise aynı işlemi bu kez tree hash'ini yazarak devam ediyoruz. 

```bash
➜ git cat-file -p dafb6a5f
100755 blob 1437c53f70bc211ec65739ec4a8c***********	.gitignore
100755 blob 4b412a3cfa4cabbb3a3d8175d265***********	README.md
040000 tree eaeb7e5f2932b079d4837ca65395***********	components
100644 blob 23c81abc6d8bb55de4bfb9567c8a***********	data.js
100755 blob 36aa1a4dc28f1a7d72c037a4ef0d***********	jsconfig.json
100755 blob 8b94735e5d6a222a721b72f9d543***********	package.json
040000 tree e615f7e6d7712b0e91e484b70529***********	pages
040000 tree 45eb3bc0909b493adf37d7bcb11a***********	public
100755 blob 9f7c9dcc239336c67b8f024a91fe***********	site.config.js
040000 tree 9d0b469049594f9921be80ee33e3***********	styles
100755 blob 52c5fa66a84de8b4387803ec20c8***********	yarn.lock
```

Artık hangi kısımdaki değişiklikler kaybolduysa oradaki içerikleri kolay bir şekilde alabiliriz. Onun için yine aynı kodu kullanıyoruz. 

```bash
➜ git cat-file -p  4b412a3
### Hello World

Hello World!
```

Gördüğünüz gibi dosya içeriğini görmüş oluyoruz. Benim edindiğim tecrübe bu şekildeydi. Belki daha iyi ve temiz bir yol vardır ama o yolu keşfedene kadar benim için en iyi yol budur :)

Şimdi **Git** ve yaptığın **değişiklikleri geri getir!**

<h3>Kaynaklar</h3>

- [Git accidentally deleted all of my changes (Stackoverflow)](https://stackoverflow.com/a/19628406/8745473) 
- [Git inside: Direct work with git objects](https://githowto.com/git_internals_working_directly_with_git_objects)
]]></summary>
        <content type="html"><![CDATA[
Yaklaşık bir saat önce yeni birkaç özellik yazdım ve o arada git pull yapmadığım için git push yaparken hata verdi. Onları kurtarayım derken yaptığım değişiklikler gitti. Bu gibi senaryolarda yapacak bir şey yok deyip yeniden yazamya başlardım. Ama bu sefer, belki bir yol vardır diye google yolunu tuttum.

Eğer yaptığınız değişikliği `git add` yaptıysanız dosyalar hashlenmiş oluyor. Bu demek oluyor ki git bunu sizin yerinize tutuyor. Ki git'in olayı da bu değil midir? Sonra anlamadığınız şekilde bir şeyler oldu, yaptınız ve bir takım olaylar gelişti. Değişiklikleriniz gitti. Sakin ol ve derin bir nefes alıp yazıyı okumaya devam et.

```bash
  git fsck --lost-found
```
bu kodu kullanarak hashlenmiş olan önceki değişikliği geri getirin. Bu kodu yazdıktan sonra size aşağıdaki gibi bir çıktı oluşturuyor. Aslında bu çıktının aynısı `.git/lost-found` klasörü içinde de kayıt ediyor.

```bash
Checking object directories: 100% (256/256), done.
dangling commit 42fd85940eb2f76f32d4be5ac2d4b***********
dangling commit 831acdb7115a6284f6e969ac90c7f***********
dangling tree 8cc268a3f48c08cd95329fcd73cc306***********
dangling commit ef7fe1814a47fbf89cbcbb1ce39e4***********
```

Çok güzel, yaptığımız değişikliklerin hash'lerine ulaşmış olduk. Şimdi `git cat-file` diye bir komuttan yardım alacağız. Bu kod kısacası, yapılan değişikliklerin içerik, tür ve boyut bilgilerini sağlıyor. 

Önce geri getirmek istediğimiz değişikliğin hangisi olduğunu öğrenmek istiyoruz. Bunun için aşağıdaki kodu yazıp commit mesajınıza bakarak doğru bir hash olduğunu doğrulayabilirsiniz. 

> **ef7fe181** ifadesi yukarıdaki hash çıktılarının ilk 7 hanesidir.

```bash
➜ git cat-file -p ef7fe181
tree dafb6a5fabb658210e2fa1534670f6***********
parent 84da27f33676589e46711ad35468***********
author Berat Bozkurt <beratbozkurt1999@gmail.com> 1614455618 +0300
committer Berat Bozkurt <beratbozkurt1999@gmail.com> 1614455618 +0300

upload files
```

Daha sonra ise aynı işlemi bu kez tree hash'ini yazarak devam ediyoruz. 

```bash
➜ git cat-file -p dafb6a5f
100755 blob 1437c53f70bc211ec65739ec4a8c***********	.gitignore
100755 blob 4b412a3cfa4cabbb3a3d8175d265***********	README.md
040000 tree eaeb7e5f2932b079d4837ca65395***********	components
100644 blob 23c81abc6d8bb55de4bfb9567c8a***********	data.js
100755 blob 36aa1a4dc28f1a7d72c037a4ef0d***********	jsconfig.json
100755 blob 8b94735e5d6a222a721b72f9d543***********	package.json
040000 tree e615f7e6d7712b0e91e484b70529***********	pages
040000 tree 45eb3bc0909b493adf37d7bcb11a***********	public
100755 blob 9f7c9dcc239336c67b8f024a91fe***********	site.config.js
040000 tree 9d0b469049594f9921be80ee33e3***********	styles
100755 blob 52c5fa66a84de8b4387803ec20c8***********	yarn.lock
```

Artık hangi kısımdaki değişiklikler kaybolduysa oradaki içerikleri kolay bir şekilde alabiliriz. Onun için yine aynı kodu kullanıyoruz. 

```bash
➜ git cat-file -p  4b412a3
### Hello World

Hello World!
```

Gördüğünüz gibi dosya içeriğini görmüş oluyoruz. Benim edindiğim tecrübe bu şekildeydi. Belki daha iyi ve temiz bir yol vardır ama o yolu keşfedene kadar benim için en iyi yol budur :)

Şimdi **Git** ve yaptığın **değişiklikleri geri getir!**

<h3>Kaynaklar</h3>

- [Git accidentally deleted all of my changes (Stackoverflow)](https://stackoverflow.com/a/19628406/8745473) 
- [Git inside: Direct work with git objects](https://githowto.com/git_internals_working_directly_with_git_objects)
]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Aklımda Kalsın: React'ta Hataları Yakalayalım]]></title>
        <id>https://beratbozkurt.net/blog/aklimda-kalsin-reactta-hatalari-yakalayalim</id>
        <link href="https://beratbozkurt.net/blog/aklimda-kalsin-reactta-hatalari-yakalayalim"/>
        <updated>2021-02-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
İnsan yeni proje geliştirdikçe ve özellikle müşterilere çıkacaksa mutlaka bir şeyin eksik veya yanlış olduğunun farkına varıyor. Bu farkına vardığınız şeyler ise sizin ya eski tecrübelerinizi konuşturup bir fikir ortaya atmanızı ya da eğer benim gibiyseniz bu ihtiyaçları gidermek için yeni şeyler öğrenip onları başarılı bir şekilde uygulamak gerekir.

O yüzden eğer **yazılıma YENİ BAŞLIYORSAN** mutlaka proje yapmalısın. Çünkü yaptığın projeler, kişisel gelişiminin daha verimli bir şekilde artmasını sağlıyor. Aslında tek başına bunu iyi yapıyorsun. Çünkü ben o kısımları yaşadım ve gelişim bir seviyeye kadar oluyor. Kendini bir an önce bir ekibe atmak iyi oluyor. Çünkü farklı kafalar görmüş oluyor ve olması gereken bir çözümü öğrenip ona göre çalışmalar yapabiliyorsunuz.

Bugün bir mobil uygulama yaptığınızı düşüneceğiz. Uygulamanızı hazırlayıp test etme aşamasına geçtiniz. Telefonunuzdan uygulamanıza girdiniz ve açılmıyor (beyaz sayfada kalıyor). Hemen kontrol ediyorsunuz ve local'de çalıştırdığınızda hata alıyorsunuz. Endişelenmeyin çok olası bir durum :) İşte sizin yaşadığınız bu problemi ileride kullanıcılarınızı karşılarken almamak, hatta doğru bir şekilde söylemek gerekirse, kullanıcılarınızı bilgilendirmek iyi bir tercih olacaktır. _"Lütfen tekrar deneyin", "Lütfen uygulama yapımcısı ile iletişime geçin", "Hatayı bildirin"_

<hr />

```javascript
import React, { Component } from "react"

export default class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props)
    this.state = { error: null, errorInfo: null }
  }
  componentDidCatch(error, errorInfo) {
    console.log({
      error: error,
      errorInfo: errorInfo,
    })

    this.setState({
      error: error,
      errorInfo: errorInfo,
    })
  }

  render() {
    if (this.state.errorInfo) {
      return <h1> BE CAREFULL, DUDE! </h1>
    }
    return this.props.children
  }
}
```

Yukarı kodda belli olduğu gibi react'taki `componentDidCatch` lifecycle yöntemini kullanıyoruz. Bu şekilde ekrana gelen tüm hataları buradan yakalayıp istediğimiz gibi işlemlere sokabiliyoruz. Burada bildiğim kadarıyla şunları yapabilirsiniz:

- Hata olduğu zaman bunun için hazırlanan endpoint ile sürekli iletişim halinde olabilir.
- Eğer Sentry gibi bir servis kullanıyorsanız tetikleme işlemleri yapabilirsiniz.
- Bir mobil uygulama olduğunu düşünürsek Alert mesajı verebilirsiniz.

Aslında anlaşılması kolay bir şey ama bunun varlığından haberdar olmak önemli.

Şimdi gelin bu kodu uygulamaya nasıl uygulayacağız. Öncelikle `src/index.js` dosyasını açalım ve `<App />`'i kapsayacak şekilde yazalım.

```javascript
import { StrictMode } from "react"
import ReactDOM from "react-dom"

import App from "./App"
import ErrorBoundary from "./ErrorBoundary" 

const rootElement = document.getElementById("root")
ReactDOM.render(
  <StrictMode>
    <ErrorBoundary>
      <App />
    </ErrorBoundary>
  </StrictMode>,
  rootElement
)
```

Şimdi daha iyi bir kullanıcı deneyimine sahip ve nerede hata olduğunu kolayca bir şekilde bulmanızı sağlayan bir uygulama yazmaya başlayabilirsiniz :)

]]></summary>
        <content type="html"><![CDATA[
İnsan yeni proje geliştirdikçe ve özellikle müşterilere çıkacaksa mutlaka bir şeyin eksik veya yanlış olduğunun farkına varıyor. Bu farkına vardığınız şeyler ise sizin ya eski tecrübelerinizi konuşturup bir fikir ortaya atmanızı ya da eğer benim gibiyseniz bu ihtiyaçları gidermek için yeni şeyler öğrenip onları başarılı bir şekilde uygulamak gerekir.

O yüzden eğer **yazılıma YENİ BAŞLIYORSAN** mutlaka proje yapmalısın. Çünkü yaptığın projeler, kişisel gelişiminin daha verimli bir şekilde artmasını sağlıyor. Aslında tek başına bunu iyi yapıyorsun. Çünkü ben o kısımları yaşadım ve gelişim bir seviyeye kadar oluyor. Kendini bir an önce bir ekibe atmak iyi oluyor. Çünkü farklı kafalar görmüş oluyor ve olması gereken bir çözümü öğrenip ona göre çalışmalar yapabiliyorsunuz.

Bugün bir mobil uygulama yaptığınızı düşüneceğiz. Uygulamanızı hazırlayıp test etme aşamasına geçtiniz. Telefonunuzdan uygulamanıza girdiniz ve açılmıyor (beyaz sayfada kalıyor). Hemen kontrol ediyorsunuz ve local'de çalıştırdığınızda hata alıyorsunuz. Endişelenmeyin çok olası bir durum :) İşte sizin yaşadığınız bu problemi ileride kullanıcılarınızı karşılarken almamak, hatta doğru bir şekilde söylemek gerekirse, kullanıcılarınızı bilgilendirmek iyi bir tercih olacaktır. _"Lütfen tekrar deneyin", "Lütfen uygulama yapımcısı ile iletişime geçin", "Hatayı bildirin"_

<hr />

```javascript
import React, { Component } from "react"

export default class ErrorBoundary extends React.Component {
  constructor(props) {
    super(props)
    this.state = { error: null, errorInfo: null }
  }
  componentDidCatch(error, errorInfo) {
    console.log({
      error: error,
      errorInfo: errorInfo,
    })

    this.setState({
      error: error,
      errorInfo: errorInfo,
    })
  }

  render() {
    if (this.state.errorInfo) {
      return <h1> BE CAREFULL, DUDE! </h1>
    }
    return this.props.children
  }
}
```

Yukarı kodda belli olduğu gibi react'taki `componentDidCatch` lifecycle yöntemini kullanıyoruz. Bu şekilde ekrana gelen tüm hataları buradan yakalayıp istediğimiz gibi işlemlere sokabiliyoruz. Burada bildiğim kadarıyla şunları yapabilirsiniz:

- Hata olduğu zaman bunun için hazırlanan endpoint ile sürekli iletişim halinde olabilir.
- Eğer Sentry gibi bir servis kullanıyorsanız tetikleme işlemleri yapabilirsiniz.
- Bir mobil uygulama olduğunu düşünürsek Alert mesajı verebilirsiniz.

Aslında anlaşılması kolay bir şey ama bunun varlığından haberdar olmak önemli.

Şimdi gelin bu kodu uygulamaya nasıl uygulayacağız. Öncelikle `src/index.js` dosyasını açalım ve `<App />`'i kapsayacak şekilde yazalım.

```javascript
import { StrictMode } from "react"
import ReactDOM from "react-dom"

import App from "./App"
import ErrorBoundary from "./ErrorBoundary" 

const rootElement = document.getElementById("root")
ReactDOM.render(
  <StrictMode>
    <ErrorBoundary>
      <App />
    </ErrorBoundary>
  </StrictMode>,
  rootElement
)
```

Şimdi daha iyi bir kullanıcı deneyimine sahip ve nerede hata olduğunu kolayca bir şekilde bulmanızı sağlayan bir uygulama yazmaya başlayabilirsiniz :)

]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Kendime Kodlar: TypeScript]]></title>
        <id>https://beratbozkurt.net/blog/kendime-kodlar-typescript</id>
        <link href="https://beratbozkurt.net/blog/kendime-kodlar-typescript"/>
        <updated>2021-02-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
Eğer kariyerinizi belirleyip o alanda daha iyi bir seviyeye gelmek istiyorsanız mutlaka teknolojileri takip etmelisiniz. En azından güncel kalmalısınız. Özellikle benim gibi yolun başındasınız bu süreçler biraz sizi yoracaktır. Eğer bu iş sizin için bir hobi ise bu süreç eğlenceli bir hal alacaktır.

Söz dizimlerini aklımda tutmakta zorlanıyorum. O yüzden yeni başladığım teknolojilerde mutlaka söz dizimlerini hatırlamak için örnek bir proje üzerinden takip ederim. Bu şekilde yazmak daha kolay oluyor. Yeni bir teknolojiye başlarken ise odaklandığım nokta mantığını anlamak. Bu mantığı anlama kısmı ise piyasanın içinde olduğunda daha kısa sürüyor. 

Bu yazıda ise daha sonra gelip bakacağım için kod bölümleri olacak. Aslında sizlerde burayı **cheatsheet** olarak kullanabilirsiniz. 

<Tweet id="1374805180689100809" />

<h3>TypeScript Tipleri (Types)</h3>

Tahminimce en yaygın kullanılanları bir kod bloğu içinde inceleyelim. 

``` javascript
let isim: string = 'berat'; // String tipinde olmalı.
let yas: number; // Number tipinde olmalı
let numara: any; // Herhangi bir tip olabilir
let teknolojiler: string[]; // Stringler'den oluşan bir dizi

yas = 22;
numara = "555 555 55 55";
teknolojiler = ["React", "Redux"]

console.log(`${isim}, ${yas}, ${numara}, ${teknolojiler.join(" - ")}`) // "berat, 22, 555 555 55 55, React - Redux" 

```


`enum` mantığını kafamda kuramadığım için bir tweet attım ve verilen cevap sonucunda biraz da olsa anladım diyebilirim. 

<Tweet id="1359962186974720011" />

Anladığım kadarıyla `enum` ile tanımlanan tip yapısından çıkmamanı sağlıyor. Ama kanaatimce onun yerine `string literal union` kullanmak daha kolay. 

> Genelde bu terimleri bilmem ve alışkın değilim. Ama bir noktadan sonra bunları bilmek ve bilgi sahibi olmak gerekir. O yüzden kullanarak bunları öğreniyorum.

``` javascript

enum Boyutlar {
  kucuk = "10px",
  orta = "50px",
  buyuk= "100px"
}

console.log(`Aldığım ürün ${Boyutlar.orta} boyutundaydı.`) //"Aldığım ürün 50px boyutundaydı." 

```

`Tuple` sabit bir arrayin içindeki elemanların tipi belli ise kullanabileceğiniz bir tip.
```javascript

let errors: [number, string];
errors= [404, "Not found!"]; 

```

Diğer tiplerden biri ise `unknown`'dur. Any ile arasındaki tek fark; eğer daha önceden tipini belirlediğiniz bir değişkeniniz varsa unknown olarak tanımladığınız değişkeni o değişkene atayamazsınız. Hemen örnek verelim.

```javascript
let durum = true;

let a: any = status // çalışır

let b: unknown;

durum = b; // hata verir

```

`Object Type` yani nesne tipini belirlemek.

```javascript

let kullanici: {
  isim: string;
  yas: number;
  numara: any;
  maas: () => number
}

kullanici = {
  isim: 'Berat',
  yas: 22,
  numara: 5555555555
}

```


<h3>TypeScript Union Type</h3>

Kısacası değişkenin alacağı değerleri sınırlamak veya birkaç farklı tipte değer atamasına olanak sağlıyor.

```javascript

let pozisyon: {
  rol: "admin" | "user"; // sadece admin ya da user değerini alabilir.
  TC: string | number; // değer string ya da number tipini alabilir.
}

```

<h3>TypeScript Fonksiyonlar (Functions)</h3>

```javascript

const yazdir = (isim: string, yas: number, TC: string | number, numara?: string) : any => {
  return `${isim} ${yas} ${TC} ${numara}`
} 

yazdir("Berat", 22, 11111111111)

```

Tüm olayı tek fonksiyon ile anlatmaya çalıştım. Şimdi gelin neler var bakalım; 
- `isim: string` parametreleri bu şekilde gönderiyoruz. Daha önceden de kullandığımız gibi.
- `numara?: string` burada `?` işareti devreye geliyor. Eğer bu paramtereyi almak zorunda değilsek soru işareti kullanıyoruz. Eğer soru işareti kullanmazsak ve bu parametre gelmezse kod hata verecektir.
- `(...) : any` fonksiyon değer döndürecek ve bu değerin `any` tipinde olması gerektiğini söylüyoruz. 


<hr />

Şuan yukarıda değindiğim konuları aktif olarak kullandığım için bunlar üzerine bu yazıyı oluşturdum. İlerleyen zamanlarda eminim ki class, interface gibi kısımlarla çok ilgileneceğim. O zaman bu yazıyı günceleriz :) 

Aslında **TypeScript** ile ilgili bir proje yapmak isterdim ama örnek projeleri ve videoları incelediğim kadarıyla o kadar karışık bir olay gibi gözükmüyordu. O yüzden sadece genel özelliklerini bir yere not etmek yeterli olacaktı. 


<h3>Kaynaklar</h3>
- [The TypeScript Handbook
](https://www.typescriptlang.org/docs/handbook/intro.html)
- [TypeScript Complete Course | Typescript for Newbies
@codingwithdidem](https://youtu.be/1d92ipW7Mx8?list=WL)]]></summary>
        <content type="html"><![CDATA[
Eğer kariyerinizi belirleyip o alanda daha iyi bir seviyeye gelmek istiyorsanız mutlaka teknolojileri takip etmelisiniz. En azından güncel kalmalısınız. Özellikle benim gibi yolun başındasınız bu süreçler biraz sizi yoracaktır. Eğer bu iş sizin için bir hobi ise bu süreç eğlenceli bir hal alacaktır.

Söz dizimlerini aklımda tutmakta zorlanıyorum. O yüzden yeni başladığım teknolojilerde mutlaka söz dizimlerini hatırlamak için örnek bir proje üzerinden takip ederim. Bu şekilde yazmak daha kolay oluyor. Yeni bir teknolojiye başlarken ise odaklandığım nokta mantığını anlamak. Bu mantığı anlama kısmı ise piyasanın içinde olduğunda daha kısa sürüyor. 

Bu yazıda ise daha sonra gelip bakacağım için kod bölümleri olacak. Aslında sizlerde burayı **cheatsheet** olarak kullanabilirsiniz. 

<Tweet id="1374805180689100809" />

<h3>TypeScript Tipleri (Types)</h3>

Tahminimce en yaygın kullanılanları bir kod bloğu içinde inceleyelim. 

``` javascript
let isim: string = 'berat'; // String tipinde olmalı.
let yas: number; // Number tipinde olmalı
let numara: any; // Herhangi bir tip olabilir
let teknolojiler: string[]; // Stringler'den oluşan bir dizi

yas = 22;
numara = "555 555 55 55";
teknolojiler = ["React", "Redux"]

console.log(`${isim}, ${yas}, ${numara}, ${teknolojiler.join(" - ")}`) // "berat, 22, 555 555 55 55, React - Redux" 

```


`enum` mantığını kafamda kuramadığım için bir tweet attım ve verilen cevap sonucunda biraz da olsa anladım diyebilirim. 

<Tweet id="1359962186974720011" />

Anladığım kadarıyla `enum` ile tanımlanan tip yapısından çıkmamanı sağlıyor. Ama kanaatimce onun yerine `string literal union` kullanmak daha kolay. 

> Genelde bu terimleri bilmem ve alışkın değilim. Ama bir noktadan sonra bunları bilmek ve bilgi sahibi olmak gerekir. O yüzden kullanarak bunları öğreniyorum.

``` javascript

enum Boyutlar {
  kucuk = "10px",
  orta = "50px",
  buyuk= "100px"
}

console.log(`Aldığım ürün ${Boyutlar.orta} boyutundaydı.`) //"Aldığım ürün 50px boyutundaydı." 

```

`Tuple` sabit bir arrayin içindeki elemanların tipi belli ise kullanabileceğiniz bir tip.
```javascript

let errors: [number, string];
errors= [404, "Not found!"]; 

```

Diğer tiplerden biri ise `unknown`'dur. Any ile arasındaki tek fark; eğer daha önceden tipini belirlediğiniz bir değişkeniniz varsa unknown olarak tanımladığınız değişkeni o değişkene atayamazsınız. Hemen örnek verelim.

```javascript
let durum = true;

let a: any = status // çalışır

let b: unknown;

durum = b; // hata verir

```

`Object Type` yani nesne tipini belirlemek.

```javascript

let kullanici: {
  isim: string;
  yas: number;
  numara: any;
  maas: () => number
}

kullanici = {
  isim: 'Berat',
  yas: 22,
  numara: 5555555555
}

```


<h3>TypeScript Union Type</h3>

Kısacası değişkenin alacağı değerleri sınırlamak veya birkaç farklı tipte değer atamasına olanak sağlıyor.

```javascript

let pozisyon: {
  rol: "admin" | "user"; // sadece admin ya da user değerini alabilir.
  TC: string | number; // değer string ya da number tipini alabilir.
}

```

<h3>TypeScript Fonksiyonlar (Functions)</h3>

```javascript

const yazdir = (isim: string, yas: number, TC: string | number, numara?: string) : any => {
  return `${isim} ${yas} ${TC} ${numara}`
} 

yazdir("Berat", 22, 11111111111)

```

Tüm olayı tek fonksiyon ile anlatmaya çalıştım. Şimdi gelin neler var bakalım; 
- `isim: string` parametreleri bu şekilde gönderiyoruz. Daha önceden de kullandığımız gibi.
- `numara?: string` burada `?` işareti devreye geliyor. Eğer bu paramtereyi almak zorunda değilsek soru işareti kullanıyoruz. Eğer soru işareti kullanmazsak ve bu parametre gelmezse kod hata verecektir.
- `(...) : any` fonksiyon değer döndürecek ve bu değerin `any` tipinde olması gerektiğini söylüyoruz. 


<hr />

Şuan yukarıda değindiğim konuları aktif olarak kullandığım için bunlar üzerine bu yazıyı oluşturdum. İlerleyen zamanlarda eminim ki class, interface gibi kısımlarla çok ilgileneceğim. O zaman bu yazıyı günceleriz :) 

Aslında **TypeScript** ile ilgili bir proje yapmak isterdim ama örnek projeleri ve videoları incelediğim kadarıyla o kadar karışık bir olay gibi gözükmüyordu. O yüzden sadece genel özelliklerini bir yere not etmek yeterli olacaktı. 


<h3>Kaynaklar</h3>
- [The TypeScript Handbook
](https://www.typescriptlang.org/docs/handbook/intro.html)
- [TypeScript Complete Course | Typescript for Newbies
@codingwithdidem](https://youtu.be/1d92ipW7Mx8?list=WL)]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[İzledim: Hayattan Bir Gün (Belgesel)]]></title>
        <id>https://beratbozkurt.net/blog/izledim-hayattan-bir-gun</id>
        <link href="https://beratbozkurt.net/blog/izledim-hayattan-bir-gun"/>
        <updated>2021-02-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
Zaman zaman gelecek, geçmiş, insanlar hakkında düşünürüm. İnsanlar hakkında düşünürken aslında empati kurmaya çalışırım ve başkası nasıl düşünüyor, nasıl yaşıyor, neler yapmak istiyor... diye giden sorulara cevap aramaya çalışırım. Çünkü hala aklımda bir takım sorular ve cevabını bulmak zor oluyor. Bu da benim keşfetme çabam işte :)

Acaba ben şu an bu yazıyı yazarken dünyanın başka yerinden tanımadığım hatta varlığını bile bilmediğim birisi ne yapıyor? Mutlu mu? Ağlıyor mu? Acaba o da başkasını mı düşünüyor? 

Aslında bu şekilde insan yaşadığı hayattan ders alabilir, şükredebilir veya keyfini çıkarabilir. Çünkü ben şu an sağlıklı bir şekilde nefes alıp hayalimdeki mesleği yapabiliyorsam belki bazıları, bir solunum cihazına bağlı veya yeterli imkanları sağlayamadığı için hayalindeki mesleğe yapamıyorlar. Aslında bunlar çok basit bir örnek.

Bu belgesel aslında ikincisi. İlk belgesel 24 Temmuz 2010 yılından toplanan videolardan oluşmaktadır. İkinci yani son çıkan belgesel ise 25 Temmuz 2020'den toplanan videolardan oluşmaktadır. Aslında ilk önce ilk çıkan belgeseli izleyip daha sonrasında ikincisini izleyebilirsiniz. 

İkinci belgeselinden rakamlarından bahsetmek gerekirse; **192** ülkeden **65** dilde toplam **324.705** video gönderilmiş. En sonunda ise ortaya **1** saat **25** dakika **52** saniyelik bir belgesel ortaya çıkmış. [Kaynak](https://www.instagram.com/lifeinaday2020/)

Belgeselde Türkiye'den 3 bölüm yakaladım. Bunu farkedince insanın yüzünde bir tebessüm olmuyor değil tabii :)


**2010 yılında çekilen belgesel**
<Youtube id="JaFVr_cJJIY" />


**2020 yılında çekilen belgesel**
<Youtube id="vcsSc2iksC0" />]]></summary>
        <content type="html"><![CDATA[
Zaman zaman gelecek, geçmiş, insanlar hakkında düşünürüm. İnsanlar hakkında düşünürken aslında empati kurmaya çalışırım ve başkası nasıl düşünüyor, nasıl yaşıyor, neler yapmak istiyor... diye giden sorulara cevap aramaya çalışırım. Çünkü hala aklımda bir takım sorular ve cevabını bulmak zor oluyor. Bu da benim keşfetme çabam işte :)

Acaba ben şu an bu yazıyı yazarken dünyanın başka yerinden tanımadığım hatta varlığını bile bilmediğim birisi ne yapıyor? Mutlu mu? Ağlıyor mu? Acaba o da başkasını mı düşünüyor? 

Aslında bu şekilde insan yaşadığı hayattan ders alabilir, şükredebilir veya keyfini çıkarabilir. Çünkü ben şu an sağlıklı bir şekilde nefes alıp hayalimdeki mesleği yapabiliyorsam belki bazıları, bir solunum cihazına bağlı veya yeterli imkanları sağlayamadığı için hayalindeki mesleğe yapamıyorlar. Aslında bunlar çok basit bir örnek.

Bu belgesel aslında ikincisi. İlk belgesel 24 Temmuz 2010 yılından toplanan videolardan oluşmaktadır. İkinci yani son çıkan belgesel ise 25 Temmuz 2020'den toplanan videolardan oluşmaktadır. Aslında ilk önce ilk çıkan belgeseli izleyip daha sonrasında ikincisini izleyebilirsiniz. 

İkinci belgeselinden rakamlarından bahsetmek gerekirse; **192** ülkeden **65** dilde toplam **324.705** video gönderilmiş. En sonunda ise ortaya **1** saat **25** dakika **52** saniyelik bir belgesel ortaya çıkmış. [Kaynak](https://www.instagram.com/lifeinaday2020/)

Belgeselde Türkiye'den 3 bölüm yakaladım. Bunu farkedince insanın yüzünde bir tebessüm olmuyor değil tabii :)


**2010 yılında çekilen belgesel**
<Youtube id="JaFVr_cJJIY" />


**2020 yılında çekilen belgesel**
<Youtube id="vcsSc2iksC0" />]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[React Uygulamasına Test Yazalım #1]]></title>
        <id>https://beratbozkurt.net/blog/react-uygulamasina-test-yazalim-1</id>
        <link href="https://beratbozkurt.net/blog/react-uygulamasina-test-yazalim-1"/>
        <updated>2021-01-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
Ülkemizdeki şirketlerin bir çoğu --dersem yanılmam sanırım-- test yazma taraftarı değiller. Sanırım bunu bir zaman kaybı olarak görüyorlar. İlk zamanlarda ben de öyle görüyordum, belki şimdi de öyle görüyorum, bundan tam emin değilim. Her neyse, bugün sizlerle **react uygulamamıza nasıl test yazarız?** Hangi araçları kullanırız? Mantığı nedir? bunlardan bahsedeceğim. ~~Eğer ihtiyaç duyarsam belki bu yazının 2. partını da yazabilirim. Söz vermeyelim :)~~ Yazmıştım ama bu yazıda basit bir örnek yapalım. Bir sonraki yazıda biraz daha detaylı bir örnek yaparız.

Yandaki kelimelerin ne anlama geldiklerini ve ne amaçla kulanıldıklarına hakim olursanız bu yazı daha faydalı olacaktır. `Unit test`, `Jest`, `Enzyme`Teker teker ne işe yaradığını, nedir, ne değildir gibi tanımlar yapmayacağım. Bu şekilde tanımlardan bahsetmeyi de beceremiyorum. Bunun için bir kaç arama ile kolayca bilgi sahibi olabilirsiniz. (Bunun için yazının altına bir kaç kaynak bırakacağım.) Hadi örnek uygulamaya geçelim.

<h3>Öncelikle bir senaryo düşünelim</h3>

- Bir adet input
- Bir adet buton

kullanalım. İnput'a yazılan metni bir state'e kaydedip butona tıkladığımız zaman state'teki değeri console.log ile ekrana verelim. Bunun için şöyle bir sayfamız olacak.

```js
import React, { useState } from "react"

export default function SearchBox(props) {
  const [text, setText] = useState("")

  const onChange = e => {
    setText(e.target.value)
  }

  const onClick = e => {
    console.log("State'teki değerimiz: ", text) 
  }

  return (
    <div className="search-box">
      <input
        type="text"
        onChange={onChange}
        value={text}
        placeholder="Ara"
        className="search-input"
      />
      <button type="submit" className="button-click" onClick={onClick}>
        Tıkla
      </button>
    </div>
  )
}
```

Başlangıç seviyesinde olsanız da çok kolay bir şekilde anlayabileceğiniz bir bileşen. Yine de açıklamak gerekirse; input'a yazılan her yazı state'te tutuluyor ve butona tıkladığı zaman state'teki değer console.log ile yazılmaktadır. İlk aşama için belki bu örnek işimizi görecektir.

Bu şekilde bir bileşen oluşturduktan sonra şimdi sırada test yazmak var. Bu aşamada kodların hepsini vermek yerine kısım kısım verip üzerinden anlatayım. Belki bu şekilde daha iyi anlaşılır olur. Zaten ayrıca projeyi github üzerinden de paylaşacağım. Oradan daha detaylı bir şekilde inceleyebilirsiniz.

```javascript
import React from "react"
import { render, fireEvent } from "@testing-library/react"
import SearchBox from "./SearchBox"
```

Öncelikle gerekli olan kütüphaneleri dosyamıza dahil ediyoruz. `SearchBox` bileşene verdiğim isim.

<hr />

```javascript
it("renders correctly", () => {
  const { container, queryByPlaceholderText } = render(<SearchBox />)
  const button = container.getElementsByClassName("button-click").length

  expect(button).toBeTruthy()
  expect(queryByPlaceholderText("Search")).toBeTruthy()
})
```

Bileşendeki elemanlarımızın doğru bir şekilde yüklendiğini kontrol etmek için böyle bir kapsamımız var. Burada `render` fonksiyonu içinde `SearchBox` bileşenini gönderiyoruz ve buradan container ve queryByPlaceholderText'i çekiyoruz.

> **container :** Bileşen içindeki tüm elemanara ulaşmamızı sağlıyor. Bunu elemente class ismi ile ulaşmak istediğimden dolayı kullandım. Bunu kullanmadan elemente bir id değeri yazarak `queryAllByTestId` ile de ulaşabilirdim. <br /> **queryByPlaceholderText :** Bileşen içinde input olduğu için bu input'a placeholder değeri ile ulaşıyorum.

Aslında bu kapsamda bileşen içindeki buton ve input elementlerini çağırıp render edilip edilmediğini kontrol ettim.

<hr />

```javascript
describe("Input value", () => {
  it("renders correctly", () => {})
}
```

Genel bir başlık altında test işlemi yapacaksak `describe` fonksiyonunu kullanabiliriz.

<hr />

Şimdi ise input'a yazı yazdırıp butona tıklama olayını test edelim. Bakalaım ekranda ne göreceğiz.

```javascript
it("triggers onClick function", () => {
  const requestClick = jest.fn()

  const { container, queryByPlaceholderText } = render(
    <SearchBox requestClick={requestClick} />
  )

  const searchInput = queryByPlaceholderText("Search")
  const button = container.querySelector(".button-click")

  fireEvent.change(searchInput, { target: { value: "örnek veri" } })
  fireEvent.click(button)
  expect(requestClick).not.toHaveBeenCalled()
})
```

`jest.fn()` işleminin tam işlevi nedir bilmiyorum ama internette sahte bir işlev olarak geçiyor.  
Yukarıda bahsettiğim gibi bileşen içerisindeki elemanlara ulaştık. Burada ekstra olarak bileşenimize props olarak `requestClick` gönderdik.

Daha önceden sayfada dahil ettiğimiz `fireEvent` fonksiyonu ile click ve change event'ini oluşturuyoruz. Burada ekstra olarak change event'ini oluştururken içine birkaç parametre gönderemliyiz. Bunlardan biri hangi input'un change event'ini kontrol ediyoruz. Bir diğerisi ise örnek bir veri gönderiyoruz. Buradaki mantık ise şudur; Normalde input'a yazdığımız yazıyı okumak için `onChange={e => console.log(e.target.value)}` şeklinde bir event'imiz olur. O yüzden test kapsamındaki veriyi de o şekilde göndermek gerekecek.

Daha sonra `expect` ile buton'a tıklatıp veriyi ekranımızda görüyoruz.

<Image alt="" src="/posts/react-uygulamasina-test-yazalim-1/output.png" width="1128" height="710" />

<hr />

Kaynak kodlarına [buradan](https://github.com/berat/hadi-test-yazalim) ulaşabilirsiniz. Ayrıca yazının bir sonraki serisinde bu repo üzerinden geliştirmeye devam edeceğimm.

<h3>Kaynaklar</h3>

- [React Uygulamalarında TDD](https://oguzkilic.medium.com/react-uygulamalar%C4%B1nda-tdd-48f93335d8fb) ([@0guzKilic](https://mobile.twitter.com/0guzKilic))
- [“Test yazmaya zamanımız yok!”](https://medium.com/atolye15/test-yazmaya-zaman%C4%B1m%C4%B1z-yok-926993d92c47) ( [@alpcanaydin](https://mobile.twitter.com/alpcanaydin))
]]></summary>
        <content type="html"><![CDATA[
Ülkemizdeki şirketlerin bir çoğu --dersem yanılmam sanırım-- test yazma taraftarı değiller. Sanırım bunu bir zaman kaybı olarak görüyorlar. İlk zamanlarda ben de öyle görüyordum, belki şimdi de öyle görüyorum, bundan tam emin değilim. Her neyse, bugün sizlerle **react uygulamamıza nasıl test yazarız?** Hangi araçları kullanırız? Mantığı nedir? bunlardan bahsedeceğim. ~~Eğer ihtiyaç duyarsam belki bu yazının 2. partını da yazabilirim. Söz vermeyelim :)~~ Yazmıştım ama bu yazıda basit bir örnek yapalım. Bir sonraki yazıda biraz daha detaylı bir örnek yaparız.

Yandaki kelimelerin ne anlama geldiklerini ve ne amaçla kulanıldıklarına hakim olursanız bu yazı daha faydalı olacaktır. `Unit test`, `Jest`, `Enzyme`Teker teker ne işe yaradığını, nedir, ne değildir gibi tanımlar yapmayacağım. Bu şekilde tanımlardan bahsetmeyi de beceremiyorum. Bunun için bir kaç arama ile kolayca bilgi sahibi olabilirsiniz. (Bunun için yazının altına bir kaç kaynak bırakacağım.) Hadi örnek uygulamaya geçelim.

<h3>Öncelikle bir senaryo düşünelim</h3>

- Bir adet input
- Bir adet buton

kullanalım. İnput'a yazılan metni bir state'e kaydedip butona tıkladığımız zaman state'teki değeri console.log ile ekrana verelim. Bunun için şöyle bir sayfamız olacak.

```js
import React, { useState } from "react"

export default function SearchBox(props) {
  const [text, setText] = useState("")

  const onChange = e => {
    setText(e.target.value)
  }

  const onClick = e => {
    console.log("State'teki değerimiz: ", text) 
  }

  return (
    <div className="search-box">
      <input
        type="text"
        onChange={onChange}
        value={text}
        placeholder="Ara"
        className="search-input"
      />
      <button type="submit" className="button-click" onClick={onClick}>
        Tıkla
      </button>
    </div>
  )
}
```

Başlangıç seviyesinde olsanız da çok kolay bir şekilde anlayabileceğiniz bir bileşen. Yine de açıklamak gerekirse; input'a yazılan her yazı state'te tutuluyor ve butona tıkladığı zaman state'teki değer console.log ile yazılmaktadır. İlk aşama için belki bu örnek işimizi görecektir.

Bu şekilde bir bileşen oluşturduktan sonra şimdi sırada test yazmak var. Bu aşamada kodların hepsini vermek yerine kısım kısım verip üzerinden anlatayım. Belki bu şekilde daha iyi anlaşılır olur. Zaten ayrıca projeyi github üzerinden de paylaşacağım. Oradan daha detaylı bir şekilde inceleyebilirsiniz.

```javascript
import React from "react"
import { render, fireEvent } from "@testing-library/react"
import SearchBox from "./SearchBox"
```

Öncelikle gerekli olan kütüphaneleri dosyamıza dahil ediyoruz. `SearchBox` bileşene verdiğim isim.

<hr />

```javascript
it("renders correctly", () => {
  const { container, queryByPlaceholderText } = render(<SearchBox />)
  const button = container.getElementsByClassName("button-click").length

  expect(button).toBeTruthy()
  expect(queryByPlaceholderText("Search")).toBeTruthy()
})
```

Bileşendeki elemanlarımızın doğru bir şekilde yüklendiğini kontrol etmek için böyle bir kapsamımız var. Burada `render` fonksiyonu içinde `SearchBox` bileşenini gönderiyoruz ve buradan container ve queryByPlaceholderText'i çekiyoruz.

> **container :** Bileşen içindeki tüm elemanara ulaşmamızı sağlıyor. Bunu elemente class ismi ile ulaşmak istediğimden dolayı kullandım. Bunu kullanmadan elemente bir id değeri yazarak `queryAllByTestId` ile de ulaşabilirdim. <br /> **queryByPlaceholderText :** Bileşen içinde input olduğu için bu input'a placeholder değeri ile ulaşıyorum.

Aslında bu kapsamda bileşen içindeki buton ve input elementlerini çağırıp render edilip edilmediğini kontrol ettim.

<hr />

```javascript
describe("Input value", () => {
  it("renders correctly", () => {})
}
```

Genel bir başlık altında test işlemi yapacaksak `describe` fonksiyonunu kullanabiliriz.

<hr />

Şimdi ise input'a yazı yazdırıp butona tıklama olayını test edelim. Bakalaım ekranda ne göreceğiz.

```javascript
it("triggers onClick function", () => {
  const requestClick = jest.fn()

  const { container, queryByPlaceholderText } = render(
    <SearchBox requestClick={requestClick} />
  )

  const searchInput = queryByPlaceholderText("Search")
  const button = container.querySelector(".button-click")

  fireEvent.change(searchInput, { target: { value: "örnek veri" } })
  fireEvent.click(button)
  expect(requestClick).not.toHaveBeenCalled()
})
```

`jest.fn()` işleminin tam işlevi nedir bilmiyorum ama internette sahte bir işlev olarak geçiyor.  
Yukarıda bahsettiğim gibi bileşen içerisindeki elemanlara ulaştık. Burada ekstra olarak bileşenimize props olarak `requestClick` gönderdik.

Daha önceden sayfada dahil ettiğimiz `fireEvent` fonksiyonu ile click ve change event'ini oluşturuyoruz. Burada ekstra olarak change event'ini oluştururken içine birkaç parametre gönderemliyiz. Bunlardan biri hangi input'un change event'ini kontrol ediyoruz. Bir diğerisi ise örnek bir veri gönderiyoruz. Buradaki mantık ise şudur; Normalde input'a yazdığımız yazıyı okumak için `onChange={e => console.log(e.target.value)}` şeklinde bir event'imiz olur. O yüzden test kapsamındaki veriyi de o şekilde göndermek gerekecek.

Daha sonra `expect` ile buton'a tıklatıp veriyi ekranımızda görüyoruz.

<Image alt="" src="/posts/react-uygulamasina-test-yazalim-1/output.png" width="1128" height="710" />

<hr />

Kaynak kodlarına [buradan](https://github.com/berat/hadi-test-yazalim) ulaşabilirsiniz. Ayrıca yazının bir sonraki serisinde bu repo üzerinden geliştirmeye devam edeceğimm.

<h3>Kaynaklar</h3>

- [React Uygulamalarında TDD](https://oguzkilic.medium.com/react-uygulamalar%C4%B1nda-tdd-48f93335d8fb) ([@0guzKilic](https://mobile.twitter.com/0guzKilic))
- [“Test yazmaya zamanımız yok!”](https://medium.com/atolye15/test-yazmaya-zaman%C4%B1m%C4%B1z-yok-926993d92c47) ( [@alpcanaydin](https://mobile.twitter.com/alpcanaydin))
]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Neler Yapıyorum? Aklımda Neler Var? #1]]></title>
        <id>https://beratbozkurt.net/blog/neler-yapiyorum-aklimda-neler-var-1</id>
        <link href="https://beratbozkurt.net/blog/neler-yapiyorum-aklimda-neler-var-1"/>
        <updated>2021-01-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
Eski blogumda bu tarz bir yazı dizisi paylaşıyordum. Bu yazılar ile aslında rapor verip biraz iç döküyordum. Aslında bu şekilde insanlarla etkileşim halinde kalıp neler yaptığım ve yapacaklarım üzerinden ufak bir bilgi geçiyorum. Bu yazıları ayda bir defa yayınlama gibi bir düşüncem var. Bu şekilde ilerleyen zamanlarda dönüp bu yazıları okuduğumda bu zamanları hatırlamam için de bir yardımcı olacaktır.

# Neler yapıyorum?

Aslında geçtiğimiz hafta aynı zamanda final haftam olduğundan dolayı benim için çok yoğun bir haftaydı. Hemen bir günümden bahsetmek istiyorum.

- 11:00'da toplantı.
- 4 saat mesai.
- Mesai'den sonra olursa toplantı.
- Kalan diğer saatlerde ise ders çalışma.
- Varsa eğer başka kişilerle tanışmak için yapılan görüşmeler.

Bu tempoda bir hayat olunca insan ister istemez yoruluyor. Bu tempo bittikten sonra da büyük ihtimal kendimi boşlukta hissedeceğim.

Blogumda yeni bir API servisi yazdım. Bu API servisinde şimdilik sadece yazıyı beğenme butonunda kullanıyorum. Büyük ihtimal ilerleyen zamanlarda abone olma bölümü için özel bir form hazırlarım. O zaman API'deki servisler çoğalacaktır.

[Bir önceki yazımda](/blog/hadi-yelken-acalim-yeni-deneyimleri) mobil uygulama yayımlayıp onlara ASO çalışmaları yaparak biraz da mobil uygulama pazarına giriş yapmak istediğimi belirtmiştim. Bunun için bir kaç adım atıp varolan uygulamalarımda durum analizini yaptım. Ayriyeten _google play console_ hesap açtım. Aslında ilk uygulamamı yayımlamak için sadece bir kaç geliştirmeler yapıp pazar için içerikleri ve görüntüleri hazırlamak olacaktır.

Üniversite'de "Proje 2" dersi kapsamında **gRPC** ile bir proje yaptım. Şu an projenin teslimi üzerinde çalışmalar yapıyorum. Belki ilerleyen günlerde bunun hakkında Türkçe bir içerik hazırlayıp yayınlarım. Çünkü kaynak konusunda ciddi sıkıntılar var.

# Neler Yapacağım?

Aslında ilk sırada **test yazmak** olacak. Hem yurt dışında test yazma konusuna ciddi bir önem verdiklerini gözlemledim hem de çalıştığım şirkette test yazma konusunda ilk adımlar atıldı. Bu yüzden önümüzdeki günlerde test üzerine birtakım çalışmalarım olacak. Bunun için yine bir yazı yayımlayıp belki örnek bir proje üzerinden bir anlatım yapabilirim.

Pandemi boyunca sektörden insanlarla tanışıp onlar ile sohbet etmeye ve aklımda olan bir kaç soruyu soruyorum. Birkaç gün önce **Alpcan Aydın** ([@alpcanaydin](https://twitter.com/alpcanaydin)) ile bir görüşme yaptık. Güzel bir sohbetin ardından bana bir fikir önerdi. "Neden bu konuşmaları bir blog şeklinde yayınlamıyorsun? Belki başkaları senin sorduğun sorulardan veya sohbetten yararlanmak ister" dedi ve aslında güzel bir fikir. Bunun hakkında biraz daha düşünmek istiyorum. Cepte olan bir fikir :)

Paylaşmayı düşündüğüm mobil uygulamalar üzerinde birtakım geliştirmeler yapıp pazara hazır hale getireceğim. Yavaş yavaş yayına çıkıp bunlar için analizler ve senaryolar çıkaracağım. Bu şekilde güzel bir deneyim elde ettikten sonra tüm bilgileri açık bir şekilde paylaşmayı planlıyorum.

Aynı zamanda gönüllü olarak çalışacağım bir side-project üzerinde geliştirmelere başlayacağım. Projedeki diğer kişiler farklı ülkede olduğundan dolayı ortak dil İngilizce olacak. Bu aslında benim için çok iyi bir durum. Aslında beni bu projeye önerdiği için **Şeyma Mektepli** ([@SMektepli](https://twitter.com/SMektepli))'ye teşekkürlerimi iletiyorum.

Aslında blogda teknik paylaşımlar yapmayı da planlıyorum. Ama bu yönümün iyi olduğunu bilmediğimden dolayı fazla sıcak yaklaşamıyorum. Bunun yerine belki deneyimlerimi ve ufak kod parçaları ile birlikte yoğurup paylaşırım.
]]></summary>
        <content type="html"><![CDATA[
Eski blogumda bu tarz bir yazı dizisi paylaşıyordum. Bu yazılar ile aslında rapor verip biraz iç döküyordum. Aslında bu şekilde insanlarla etkileşim halinde kalıp neler yaptığım ve yapacaklarım üzerinden ufak bir bilgi geçiyorum. Bu yazıları ayda bir defa yayınlama gibi bir düşüncem var. Bu şekilde ilerleyen zamanlarda dönüp bu yazıları okuduğumda bu zamanları hatırlamam için de bir yardımcı olacaktır.

# Neler yapıyorum?

Aslında geçtiğimiz hafta aynı zamanda final haftam olduğundan dolayı benim için çok yoğun bir haftaydı. Hemen bir günümden bahsetmek istiyorum.

- 11:00'da toplantı.
- 4 saat mesai.
- Mesai'den sonra olursa toplantı.
- Kalan diğer saatlerde ise ders çalışma.
- Varsa eğer başka kişilerle tanışmak için yapılan görüşmeler.

Bu tempoda bir hayat olunca insan ister istemez yoruluyor. Bu tempo bittikten sonra da büyük ihtimal kendimi boşlukta hissedeceğim.

Blogumda yeni bir API servisi yazdım. Bu API servisinde şimdilik sadece yazıyı beğenme butonunda kullanıyorum. Büyük ihtimal ilerleyen zamanlarda abone olma bölümü için özel bir form hazırlarım. O zaman API'deki servisler çoğalacaktır.

[Bir önceki yazımda](/blog/hadi-yelken-acalim-yeni-deneyimleri) mobil uygulama yayımlayıp onlara ASO çalışmaları yaparak biraz da mobil uygulama pazarına giriş yapmak istediğimi belirtmiştim. Bunun için bir kaç adım atıp varolan uygulamalarımda durum analizini yaptım. Ayriyeten _google play console_ hesap açtım. Aslında ilk uygulamamı yayımlamak için sadece bir kaç geliştirmeler yapıp pazar için içerikleri ve görüntüleri hazırlamak olacaktır.

Üniversite'de "Proje 2" dersi kapsamında **gRPC** ile bir proje yaptım. Şu an projenin teslimi üzerinde çalışmalar yapıyorum. Belki ilerleyen günlerde bunun hakkında Türkçe bir içerik hazırlayıp yayınlarım. Çünkü kaynak konusunda ciddi sıkıntılar var.

# Neler Yapacağım?

Aslında ilk sırada **test yazmak** olacak. Hem yurt dışında test yazma konusuna ciddi bir önem verdiklerini gözlemledim hem de çalıştığım şirkette test yazma konusunda ilk adımlar atıldı. Bu yüzden önümüzdeki günlerde test üzerine birtakım çalışmalarım olacak. Bunun için yine bir yazı yayımlayıp belki örnek bir proje üzerinden bir anlatım yapabilirim.

Pandemi boyunca sektörden insanlarla tanışıp onlar ile sohbet etmeye ve aklımda olan bir kaç soruyu soruyorum. Birkaç gün önce **Alpcan Aydın** ([@alpcanaydin](https://twitter.com/alpcanaydin)) ile bir görüşme yaptık. Güzel bir sohbetin ardından bana bir fikir önerdi. "Neden bu konuşmaları bir blog şeklinde yayınlamıyorsun? Belki başkaları senin sorduğun sorulardan veya sohbetten yararlanmak ister" dedi ve aslında güzel bir fikir. Bunun hakkında biraz daha düşünmek istiyorum. Cepte olan bir fikir :)

Paylaşmayı düşündüğüm mobil uygulamalar üzerinde birtakım geliştirmeler yapıp pazara hazır hale getireceğim. Yavaş yavaş yayına çıkıp bunlar için analizler ve senaryolar çıkaracağım. Bu şekilde güzel bir deneyim elde ettikten sonra tüm bilgileri açık bir şekilde paylaşmayı planlıyorum.

Aynı zamanda gönüllü olarak çalışacağım bir side-project üzerinde geliştirmelere başlayacağım. Projedeki diğer kişiler farklı ülkede olduğundan dolayı ortak dil İngilizce olacak. Bu aslında benim için çok iyi bir durum. Aslında beni bu projeye önerdiği için **Şeyma Mektepli** ([@SMektepli](https://twitter.com/SMektepli))'ye teşekkürlerimi iletiyorum.

Aslında blogda teknik paylaşımlar yapmayı da planlıyorum. Ama bu yönümün iyi olduğunu bilmediğimden dolayı fazla sıcak yaklaşamıyorum. Bunun yerine belki deneyimlerimi ve ufak kod parçaları ile birlikte yoğurup paylaşırım.
]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hadi Yelken Açalım Yeni Deneyimlere]]></title>
        <id>https://beratbozkurt.net/blog/hadi-yelken-acalim-yeni-deneyimlere</id>
        <link href="https://beratbozkurt.net/blog/hadi-yelken-acalim-yeni-deneyimlere"/>
        <updated>2021-01-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
21 yaşındayım ki aslında 22 de diyebiliriz. 3 gün sonra 22 oluyorum. Ama hiç fark etmez. Bu zamanları iyi değerlendirmek ve farklı alanlarda deneyim kazanıp bilgi sahibi olmak gerekir. Ki ben öyle düşünüyorum. Aslında insanı geliştiren de bu değil midir? Yeni deneyimler, yeni bakış açıları, yeni düşünceler...

İşten arta kalan vaktimde tam anlamıyla yaptığım bir proje yoktu. Ben de boş kalmamak ve liseden beridir aklımda olan mobil uygulama yayınlayıp para kazanma fikri :) Her ne kadar para kazansam ya da kazanmasam da önemli deği. Buradaki amaç mobil uygulama çıkarıp insanların kullanması ve pasif gelir sağlamak. Hem de bu zamanada kadar okudğum, gördüğüm şeyleri deneyip bunlar gerçekten işe yarıyor mu diye denemek lazım.

Hemen aklımda neler var ufaktan bahsedeyim; Madem o kadar **react native** yazıyoruz neden uygulama yapıp yayınlamıyorum? Diyerek çıktığım bu yolda ilk adımı atıp google play store hesabımı açtım ve ilk uygulamayı göndermek için hazırda bekliyor. Daha önceden yaptığım ama yayınlamadığım bir kaç uygulamam vardı. O yüzden onları aralıklarla yayınlayıp bir kaç deneme yapacağım.

Bu yolculukta beni neler bekliyor?

- **ASO** çalışması yapmak.
- Uygun **reklam yerleşimi** yapabilmek.
- Kullanıcı kazanmak.
- Global bir uygulama olacağı için kazanım oranlarını ölçmek.
- Kullanıcı kazanmak için reklam vermek.

O zaman ne diyoruz? Takipte kalmaya devam edin :)
]]></summary>
        <content type="html"><![CDATA[
21 yaşındayım ki aslında 22 de diyebiliriz. 3 gün sonra 22 oluyorum. Ama hiç fark etmez. Bu zamanları iyi değerlendirmek ve farklı alanlarda deneyim kazanıp bilgi sahibi olmak gerekir. Ki ben öyle düşünüyorum. Aslında insanı geliştiren de bu değil midir? Yeni deneyimler, yeni bakış açıları, yeni düşünceler...

İşten arta kalan vaktimde tam anlamıyla yaptığım bir proje yoktu. Ben de boş kalmamak ve liseden beridir aklımda olan mobil uygulama yayınlayıp para kazanma fikri :) Her ne kadar para kazansam ya da kazanmasam da önemli deği. Buradaki amaç mobil uygulama çıkarıp insanların kullanması ve pasif gelir sağlamak. Hem de bu zamanada kadar okudğum, gördüğüm şeyleri deneyip bunlar gerçekten işe yarıyor mu diye denemek lazım.

Hemen aklımda neler var ufaktan bahsedeyim; Madem o kadar **react native** yazıyoruz neden uygulama yapıp yayınlamıyorum? Diyerek çıktığım bu yolda ilk adımı atıp google play store hesabımı açtım ve ilk uygulamayı göndermek için hazırda bekliyor. Daha önceden yaptığım ama yayınlamadığım bir kaç uygulamam vardı. O yüzden onları aralıklarla yayınlayıp bir kaç deneme yapacağım.

Bu yolculukta beni neler bekliyor?

- **ASO** çalışması yapmak.
- Uygun **reklam yerleşimi** yapabilmek.
- Kullanıcı kazanmak.
- Global bir uygulama olacağı için kazanım oranlarını ölçmek.
- Kullanıcı kazanmak için reklam vermek.

O zaman ne diyoruz? Takipte kalmaya devam edin :)
]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Yıllardan 2020 idi...]]></title>
        <id>https://beratbozkurt.net/blog/yillardan-2020-idi</id>
        <link href="https://beratbozkurt.net/blog/yillardan-2020-idi"/>
        <updated>2020-12-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
Yine bir yılı ardımıza bırakıp yeni bir yıla yeni umutlarla ve hedeflerle başlıyoruz. Peki ama her şeyden önce biz bu yıl neler yaşadık, neler yaptık, neler öğrendik... Anı yaşarken insan bunun farkında olamıyor ama oturup düşününce aklına bir sürü şey geliyor. Seni sen yapanın aslında bu yaşanmışlıklar olduğunu görmüş oluyorsunuz.

2021 yıl için hedeflerimi belirtmeme gerek yok. Zaman içerisinde bunların neler olduğu zaten ortaya çıkacaktır. O yüzden gelin biz 2020'ye bakalım.

> Tabii 2020 insanlık için kötü bir yıl oldu. Korona virüsü, orman yangınları, patlamalar, depremler... tüm insanlığı derinden etkiledi.

# 5 Türkçe, 8 İngilizce Yazı Yazdım

Normalde yazmayı seven biriyim. Ama kendime ait bir adres olmadığı için açıkcası yazma isteği olmuyordu. Ama bundan sonra ayda 1 ya da 2 yazı olmak üzere bir şeyler yazacağım. Aslında bu sene **5 yazı** yazdım ama bu yazıların yanında ingilizceye çevirdiğim **8 yazı** bulunmaktadır.

Eskiden yeni doğru bir sıralama ile yazdığım yazılar.

- [Node.js ile Twitter Bot Yapmak](https://medium.com/@beratbozkurt/node-js-ile-twitter-bot-yapmak-b16faacdd859)
- [The Problems I Had While I realized My Dreams](https://medium.com/beratsblog/the-problems-i-had-while-i-realized-my-dreams-ee4d5c740fb8)
- [To Focus on English A Month](https://medium.com/beratsblog/to-focus-on-english-a-months-821b67db4920)
- [Fortunately I'm Developing The Project](https://medium.com/beratsblog/fortunately-i-am-developing-the-project-6a0f5e276a0)
- [Happiness Of Winning The First Customers](https://medium.com/beratsblog/happiness-of-winning-the-first-customers-3484c20bdb5f)
- [VS Code Dünyam/](https://beratbozkurt.net/blog/vscode-dunyam/)
- [My VS Code World](https://medium.com/beratsblog/my-vscode-world-e0a73b70a8e9)
- [React vs Vue: Benim Fikrimce](https://beratbozkurt.net/blog/react-vs-vue/)
- [React vs Vue In My Opinion](https://medium.com/beratsblog/react-vs-vue-in-my-opinion-a87fc1a49edf)
- [Building a Twitter Bot /w Node.js](https://medium.com/beratsblog/building-a-twitter-bot-w-node-js-80a88c25026a)
- [Güzel Bir Deneyim ve Başarısızlık Hikayesi](https://beratbozkurt.net/blog/guzel-bir-deneyim-ve-basarisizlik-hikayesi/)
- [A Nice Story of Experience and Failure](https://medium.com/beratsblog/a-nice-story-of-experience-and-failure-a808edc154e0)
- [Merhaba Dünya v3.0](https://beratbozkurt.net/blog/merhaba-dunya-v3/)

Aslında İngilizce'ye ne kadar ağırlık verdiğim buradan belli oluyor. Şu an bu yazıları Türkçe yazıyorum ama eminim ki ilerleyen zamanlarda blogu çoklu dil yapacağım. O zaman ingilizce yazılarda gelecektir. Tabii bu benim için fazladan bir çaba oluyor.

# Github'da 8 proje paylaştım

<Image alt="" src="/posts/yillardan-2020-idi/github.png" width="569" height="261" />

Yeni bir işe başladığımdan dolayı son aylar fazla aktif olamadım. Ama öncesinde yaklaşık 9 proje üretip bunları açık kaynak olarak paylaştım. Bu sene toplam 941 tane commit yapmışım. Bunların bazıları react native ile mobil projesi, bazıları react ve node.js projesi idi. Aynı zamanda github'da yaygın olarak kullanılan bir projeyi Türkçe'ye çevirerek destekte bulundum. [Hasura GrapHQL Engine](https://github.com/hasura/graphql-engine/blob/master/translations/README.turkish.md)

<h3>Davetiyem.co Projesinin Kaynak Kodları</h3>

Yaklaşık 1.5 yıl yayında olan projemi rafa kaldırdıktan sonra bunun sadece rafta olmaması gerek dedim ve kaynak kodları açık bir şekilde paylaştım. [API /w Node.js](https://github.com/berat/davetiyem.co-api) - [Front-end /w Next.js](https://github.com/berat/Davetiyem.co-React)

<h3>Kelime Kartı Mobil Uygulaması</h3>

İngilizce kelimelerini kolaylıkla öğrenmek için hazırlamış olduğum bir mobil uygulama projesinin kaynak kodlarını herkese açık olarak paylaşmak istedim. [WordBox](https://github.com/berat/wordBox-react-native)

<h3>Twitter Bot</h3>
Medium'da yazdığım yazıyı desteklemek için kendi projemde kullandığım [twitter botu](<(https://github.com/berat/twitBot)>)nu açık kaynak olarak github üzerinden paylaştım. Bu şekilde daha anlaşılır olmasını hedefledim.

<h3>Replike Twitter Projesi</h3>

Tüm projelerimde React yazdığım için vue ile bir proje yapmak istedim. Bunun için daha önce React ile yaptığım projeyi Vue ile yaptım. İki projenin de [Twitter replika projesi](https://github.com/berat/vuejs-practical) olmasına önem verdim çünkü bu şekilde aralarındaki farkı daha kolay anlayabilecektim. Aynı bu fark hakkında düşündüklerimi de blog olarak yazdım. [Benim Fikrimce: React ve Vue](https://beratbozkurt.net/blog/react-vs-vue/)

<h3>Covid App</h3>

[Adem İlter](https://twitter.com/ademilter)'in hazırlamış olduğu [eğitim seti](https://www.youtube.com/watch?v=NZwqvEVonUU&list=PLadt0EaV4m3CWiofBOml0r95OmhiM6I6v)ni izledikten sonra yaptığım ilk uygulama. [Covid App](https://github.com/berat/covid-app-react-native)

<h3>[Tek sayfalık bir kişisel sayfa](https://github.com/berat/homepage)</h3>

Next.js ile kişisel sayfamı hazırladığım, tasarımıyla birlikte paylaştığım bir proje.

<h3>[Preview URL component](https://github.com/berat/preview-url-component)</h3>
Yazılan hedef URL'nin graph bigilerini çeken küçük bir bileşen.

# Yeni Şeyler

Pandemiden dolayı üniversiteler uzaktan devam ediliyor ve sürekli evde olduğumuz için yeni şeyler için fazla vaktimiz oluyor. Haliyle bu vakitleri iyi değerlendirmek gerek.

İlk yaptığım **rubik küp** alıp biraz oynamak oldu. Daha sonrasında iyice odaklanıp nasıl çözeceğime kafa yordum. Ama bir sonuca varamayıp youtube üzerinden bir kaç video izleyip mantığını kavradım. Bir kaç kere çözdükten sonra haz almamaya başlayınca bir kenera attım.

En azından bir enstrüman çalmak gerektiğini düşündüm ve **bağlama** ile ilk açılışı yaptım. Notaları öğrendikten sonra bir kaç parça ile açılışı yaptım ve şu an 7-8 parça ile pratik yapmaya devam ediyorum.

Bigdata Teknoloji şirketinde **part-time front-end developer** olarak çalışmaya başladım.

# Biraz Gururlanmak, Farkındalık Olmak ve Mutluluk...

<Tweet id="1252226899843198983" />

<Tweet id="1279824729592004611" />

<Tweet id="1314922197434146818" />

<Tweet id="1304309427999305734" />

# Özel Teşekkür Adem İlter'e

[Youtube Kanalı](https://www.youtube.com/channel/UC1Z-a8i2Ce4oIEMV-S3iFrg) üzerinden yayınladığı eğitim setleri sayesinde bu yıl benim için inanılmaz verimli geçti. Oradan edindiğim bilgileri projelerimde ve işimde kullanıyorum. O yüzden buradan kendisine teşekkürlerimi iletiyorum.
]]></summary>
        <content type="html"><![CDATA[
Yine bir yılı ardımıza bırakıp yeni bir yıla yeni umutlarla ve hedeflerle başlıyoruz. Peki ama her şeyden önce biz bu yıl neler yaşadık, neler yaptık, neler öğrendik... Anı yaşarken insan bunun farkında olamıyor ama oturup düşününce aklına bir sürü şey geliyor. Seni sen yapanın aslında bu yaşanmışlıklar olduğunu görmüş oluyorsunuz.

2021 yıl için hedeflerimi belirtmeme gerek yok. Zaman içerisinde bunların neler olduğu zaten ortaya çıkacaktır. O yüzden gelin biz 2020'ye bakalım.

> Tabii 2020 insanlık için kötü bir yıl oldu. Korona virüsü, orman yangınları, patlamalar, depremler... tüm insanlığı derinden etkiledi.

# 5 Türkçe, 8 İngilizce Yazı Yazdım

Normalde yazmayı seven biriyim. Ama kendime ait bir adres olmadığı için açıkcası yazma isteği olmuyordu. Ama bundan sonra ayda 1 ya da 2 yazı olmak üzere bir şeyler yazacağım. Aslında bu sene **5 yazı** yazdım ama bu yazıların yanında ingilizceye çevirdiğim **8 yazı** bulunmaktadır.

Eskiden yeni doğru bir sıralama ile yazdığım yazılar.

- [Node.js ile Twitter Bot Yapmak](https://medium.com/@beratbozkurt/node-js-ile-twitter-bot-yapmak-b16faacdd859)
- [The Problems I Had While I realized My Dreams](https://medium.com/beratsblog/the-problems-i-had-while-i-realized-my-dreams-ee4d5c740fb8)
- [To Focus on English A Month](https://medium.com/beratsblog/to-focus-on-english-a-months-821b67db4920)
- [Fortunately I'm Developing The Project](https://medium.com/beratsblog/fortunately-i-am-developing-the-project-6a0f5e276a0)
- [Happiness Of Winning The First Customers](https://medium.com/beratsblog/happiness-of-winning-the-first-customers-3484c20bdb5f)
- [VS Code Dünyam/](https://beratbozkurt.net/blog/vscode-dunyam/)
- [My VS Code World](https://medium.com/beratsblog/my-vscode-world-e0a73b70a8e9)
- [React vs Vue: Benim Fikrimce](https://beratbozkurt.net/blog/react-vs-vue/)
- [React vs Vue In My Opinion](https://medium.com/beratsblog/react-vs-vue-in-my-opinion-a87fc1a49edf)
- [Building a Twitter Bot /w Node.js](https://medium.com/beratsblog/building-a-twitter-bot-w-node-js-80a88c25026a)
- [Güzel Bir Deneyim ve Başarısızlık Hikayesi](https://beratbozkurt.net/blog/guzel-bir-deneyim-ve-basarisizlik-hikayesi/)
- [A Nice Story of Experience and Failure](https://medium.com/beratsblog/a-nice-story-of-experience-and-failure-a808edc154e0)
- [Merhaba Dünya v3.0](https://beratbozkurt.net/blog/merhaba-dunya-v3/)

Aslında İngilizce'ye ne kadar ağırlık verdiğim buradan belli oluyor. Şu an bu yazıları Türkçe yazıyorum ama eminim ki ilerleyen zamanlarda blogu çoklu dil yapacağım. O zaman ingilizce yazılarda gelecektir. Tabii bu benim için fazladan bir çaba oluyor.

# Github'da 8 proje paylaştım

<Image alt="" src="/posts/yillardan-2020-idi/github.png" width="569" height="261" />

Yeni bir işe başladığımdan dolayı son aylar fazla aktif olamadım. Ama öncesinde yaklaşık 9 proje üretip bunları açık kaynak olarak paylaştım. Bu sene toplam 941 tane commit yapmışım. Bunların bazıları react native ile mobil projesi, bazıları react ve node.js projesi idi. Aynı zamanda github'da yaygın olarak kullanılan bir projeyi Türkçe'ye çevirerek destekte bulundum. [Hasura GrapHQL Engine](https://github.com/hasura/graphql-engine/blob/master/translations/README.turkish.md)

<h3>Davetiyem.co Projesinin Kaynak Kodları</h3>

Yaklaşık 1.5 yıl yayında olan projemi rafa kaldırdıktan sonra bunun sadece rafta olmaması gerek dedim ve kaynak kodları açık bir şekilde paylaştım. [API /w Node.js](https://github.com/berat/davetiyem.co-api) - [Front-end /w Next.js](https://github.com/berat/Davetiyem.co-React)

<h3>Kelime Kartı Mobil Uygulaması</h3>

İngilizce kelimelerini kolaylıkla öğrenmek için hazırlamış olduğum bir mobil uygulama projesinin kaynak kodlarını herkese açık olarak paylaşmak istedim. [WordBox](https://github.com/berat/wordBox-react-native)

<h3>Twitter Bot</h3>
Medium'da yazdığım yazıyı desteklemek için kendi projemde kullandığım [twitter botu](<(https://github.com/berat/twitBot)>)nu açık kaynak olarak github üzerinden paylaştım. Bu şekilde daha anlaşılır olmasını hedefledim.

<h3>Replike Twitter Projesi</h3>

Tüm projelerimde React yazdığım için vue ile bir proje yapmak istedim. Bunun için daha önce React ile yaptığım projeyi Vue ile yaptım. İki projenin de [Twitter replika projesi](https://github.com/berat/vuejs-practical) olmasına önem verdim çünkü bu şekilde aralarındaki farkı daha kolay anlayabilecektim. Aynı bu fark hakkında düşündüklerimi de blog olarak yazdım. [Benim Fikrimce: React ve Vue](https://beratbozkurt.net/blog/react-vs-vue/)

<h3>Covid App</h3>

[Adem İlter](https://twitter.com/ademilter)'in hazırlamış olduğu [eğitim seti](https://www.youtube.com/watch?v=NZwqvEVonUU&list=PLadt0EaV4m3CWiofBOml0r95OmhiM6I6v)ni izledikten sonra yaptığım ilk uygulama. [Covid App](https://github.com/berat/covid-app-react-native)

<h3>[Tek sayfalık bir kişisel sayfa](https://github.com/berat/homepage)</h3>

Next.js ile kişisel sayfamı hazırladığım, tasarımıyla birlikte paylaştığım bir proje.

<h3>[Preview URL component](https://github.com/berat/preview-url-component)</h3>
Yazılan hedef URL'nin graph bigilerini çeken küçük bir bileşen.

# Yeni Şeyler

Pandemiden dolayı üniversiteler uzaktan devam ediliyor ve sürekli evde olduğumuz için yeni şeyler için fazla vaktimiz oluyor. Haliyle bu vakitleri iyi değerlendirmek gerek.

İlk yaptığım **rubik küp** alıp biraz oynamak oldu. Daha sonrasında iyice odaklanıp nasıl çözeceğime kafa yordum. Ama bir sonuca varamayıp youtube üzerinden bir kaç video izleyip mantığını kavradım. Bir kaç kere çözdükten sonra haz almamaya başlayınca bir kenera attım.

En azından bir enstrüman çalmak gerektiğini düşündüm ve **bağlama** ile ilk açılışı yaptım. Notaları öğrendikten sonra bir kaç parça ile açılışı yaptım ve şu an 7-8 parça ile pratik yapmaya devam ediyorum.

Bigdata Teknoloji şirketinde **part-time front-end developer** olarak çalışmaya başladım.

# Biraz Gururlanmak, Farkındalık Olmak ve Mutluluk...

<Tweet id="1252226899843198983" />

<Tweet id="1279824729592004611" />

<Tweet id="1314922197434146818" />

<Tweet id="1304309427999305734" />

# Özel Teşekkür Adem İlter'e

[Youtube Kanalı](https://www.youtube.com/channel/UC1Z-a8i2Ce4oIEMV-S3iFrg) üzerinden yayınladığı eğitim setleri sayesinde bu yıl benim için inanılmaz verimli geçti. Oradan edindiğim bilgileri projelerimde ve işimde kullanıyorum. O yüzden buradan kendisine teşekkürlerimi iletiyorum.
]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Merhaba Dünya v3.0]]></title>
        <id>https://beratbozkurt.net/blog/merhaba-dunya-v3</id>
        <link href="https://beratbozkurt.net/blog/merhaba-dunya-v3"/>
        <updated>2020-12-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
**v3.0** çünkü daha önceden çok fazla blog yazma girişimlerim oldu. Bu blogu'da onların bir devamı olarak görebiliriz. Çünkü yazmayı ve blog tutmayı küçüklükten beri seviyorum. Bu da benim online günlüğüm olsun.

> _"Merhaba Dünya v2.0"_ yazısını başka bir adreste yayınladığım tarih tam olarak **30 Haziran 2015**. 5 yıl aradan sonra v3.0 yazıyorum, değişik bir duygu.

Burada toplanma amacımıza gelelim. Gördüğünüz üzere yeni bir yerde yine birlikteyiz. İlk blogumu lise 2 ya da 3'e giderken yazıyordum. İlk yazılarım, yorumlarım ve okuyan bir kitlem o zaman olmuştu. Hatta ilk paramı o zamanlarda kazanmıştım. Burada tabii para kazanma gibi bir düşüncem yok. Tamamen düşüncelerimi, deneyimlerimi ve öğrendiğim şeyleri yazarak paylaşmayı planlıyorum.

Burada yazılacak olan genel kategoriler **yazılım** ve **kişisel** olacaktır. **Yazılım**, kategorisinde aslında fazka kod paylaşmayı seven biri değilim ama zaman zaman kod paylışımı olacak. Ama genel itibariyle yaşadığım bir sorun sonrası çözümünü ya kendim anlatacağım ya da özet geçerek hemen kaynak bir link belirteceğim. Zaten zamanla her şey daha da belli olacaktır. **Kişisel**, kategorisinde ise aklıma gelen herhangi bir konu, haftalık veyahut aylık raporlar ve bu tarz bir çok şeyler ile karşılacaksınız.

Bu siteyi **Gatsby** ile kodladım ve geliştirmeye devam ediyorum. O yüzden [github](https://github.com/berat) üzerinden henüz paylaşmadım. Paylaştığım zaman zaten duyursunu da yaparım. Fırsat buldukça blogu günceleştirip daha fonksiyonel, tasarımsal olarak güzel, içerik olarak ise dolu dolu olmasına özen göstereceğim.

<Image alt="görüşürüz" src="/posts/merhaba-dunya-v3/yaziSon.gif" width="600" height="340" />

Öyleyse yeni yazılarda görüşmek dileğiyle. Sağlıcakla kalın!
]]></summary>
        <content type="html"><![CDATA[
**v3.0** çünkü daha önceden çok fazla blog yazma girişimlerim oldu. Bu blogu'da onların bir devamı olarak görebiliriz. Çünkü yazmayı ve blog tutmayı küçüklükten beri seviyorum. Bu da benim online günlüğüm olsun.

> _"Merhaba Dünya v2.0"_ yazısını başka bir adreste yayınladığım tarih tam olarak **30 Haziran 2015**. 5 yıl aradan sonra v3.0 yazıyorum, değişik bir duygu.

Burada toplanma amacımıza gelelim. Gördüğünüz üzere yeni bir yerde yine birlikteyiz. İlk blogumu lise 2 ya da 3'e giderken yazıyordum. İlk yazılarım, yorumlarım ve okuyan bir kitlem o zaman olmuştu. Hatta ilk paramı o zamanlarda kazanmıştım. Burada tabii para kazanma gibi bir düşüncem yok. Tamamen düşüncelerimi, deneyimlerimi ve öğrendiğim şeyleri yazarak paylaşmayı planlıyorum.

Burada yazılacak olan genel kategoriler **yazılım** ve **kişisel** olacaktır. **Yazılım**, kategorisinde aslında fazka kod paylaşmayı seven biri değilim ama zaman zaman kod paylışımı olacak. Ama genel itibariyle yaşadığım bir sorun sonrası çözümünü ya kendim anlatacağım ya da özet geçerek hemen kaynak bir link belirteceğim. Zaten zamanla her şey daha da belli olacaktır. **Kişisel**, kategorisinde ise aklıma gelen herhangi bir konu, haftalık veyahut aylık raporlar ve bu tarz bir çok şeyler ile karşılacaksınız.

Bu siteyi **Gatsby** ile kodladım ve geliştirmeye devam ediyorum. O yüzden [github](https://github.com/berat) üzerinden henüz paylaşmadım. Paylaştığım zaman zaten duyursunu da yaparım. Fırsat buldukça blogu günceleştirip daha fonksiyonel, tasarımsal olarak güzel, içerik olarak ise dolu dolu olmasına özen göstereceğim.

<Image alt="görüşürüz" src="/posts/merhaba-dunya-v3/yaziSon.gif" width="600" height="340" />

Öyleyse yeni yazılarda görüşmek dileğiyle. Sağlıcakla kalın!
]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[Güzel Bir Deneyim ve Başarısızlık Hikayesi...]]></title>
        <id>https://beratbozkurt.net/blog/guzel-bir-deneyim-ve-basarisizlik-hikayesi</id>
        <link href="https://beratbozkurt.net/blog/guzel-bir-deneyim-ve-basarisizlik-hikayesi"/>
        <updated>2020-09-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
Davetiyem.co yani dijital düğün davetiye oluşturma projesini 19 Ocak 2019 tarihinde yayına almıştım. Yaklaşık 2 yıldır yayında olan projemi 27 Eylül 2020 itibari ile sonlandırmış bulunmaktayım. Tamamen deneyim kazanmak ve bir şeyler başarabilmek için çıktığım bu yolda güzel deneyimler ve birikimler kazandım. Burada ise kendime bir kaç şeyler demek ve bu süreç içerisinde neler öğrendiğimi, neleri yanlış yaptığımı sizlerle de paylaşmak istedim.

<hr />

## Teksen hiçbir şeysin!

Tamam, çok güzel. Bir fikrin var ve inanıyorsun ki ben bunu başaracağım. Kendine inanıyorsun ve pozitifsin, çok güzel. Peki yanında kim var? Projeyi geliştirirken kimlerle çalışacaksın? Çalışma arkadaşların kim?

Ben en büyük sorunlarımdan biri projede yalnız olmamdı. Bundan dolayı ki her şeye benim koşmam ve halletmem gerekiyordu. Bu şekilde tamamen kendimi yordum ve verimli bir şekilde proje üzerinde düşünemedim. Odağını sadece bir yönde toplamak o işe olan verimliliğini arttıracaktır. Sadece 3 kişi olduğunuzu düşünsene. Sen yazılım tarafında bakıyorsun, bir arkadaşın tasarım kısmına, diğer arkadaşın ise pazarlama. Bence 3 kişi ile güzel bir çalışma bile çıkarılır. Yeter ki görev dağılımı yapın ve herkes gönülden çalışsın.

## Bir an önce pazara çıkın!

Zamanında şöyle bir tweet atmıştım.

<Tweet id="1290376689667776512" />

Gerçekten de öyle. Çünkü bir şekilde o projeyi uygulama haline getirebilirsin. Neden hala kodlama üzerine kafa yoruyoruz ki? Zaten hiçbir şey düşündüğünüz gibi olmuyor ve yayına aldıktan sonra bir çok şeyi değiştiriyorsunuz. Fikrinizi en basit şekilde (MVP) uygulama haline getirin ve yayına alın. Zaten yayındayken de bir şeyler ekleyip bir şeyler de kaldıracaksın. Kodlama ile neden bu kadar çok vakit kaybediyoruz?

İsterseniz fikri kodlamak için 5–6 ay harcayın. Başarı garanti mi? Projeyi bir an önce yayına alıp pazarlama ve kullanıcıyı uygulamada tutmak — kullanıcı kazanmak demiyorum, dikkat edin — için çalışmalar yapın.

## Pazarlamaya ağırlık verin!

Projede tasarımı yapan, yazılım tarafıyla ilgilenen, sosyal medya ve blog sayfaların yöneten bendim. Ama gelgelelim pazarlama dünyası. Diğerlerini bir şekilde yapabiliyorsun ama pazarlama çok ayrı bir dünya. Ben kendi çevremde paylaşabildiğim kadarıyla paylaşıyordum ama bu yeterli değildi. Pazarlama kısmına ağırlık verip kullanıcılara ulaşır ve güzel bir stratejiyle de kullanıcıyı uygulamada tutarsınız.

## Bütçesiz çok zor!

Bütçesiz bir seviyeye kadar oluyor, olamam demem ama. Bu seviye girişimi kurduktan ilk 1 ay falan. Bir aydan sonra belli bir takım harcamalar yapılması gerekiyor. Yoksa uygulama olduğu yerde kalır ve sizin tek yaptığınız bugün uygulamayı kaç kişi kullanmış, kaç kişi üye olmuş.

<hr />

Bu süreçten çıkardığım konular genel itibariyle bu şekilde. Birazda bana kazandırdıklarından konuşmaya ne dersiniz?

Projeden maddi olarak kazandığım rakam bu şekilde. Sadece blog sayfasında adsense kullanıyordum ve son zamanlarda günde bir kaç tık alıyorduk. Toplanan miktar bu şekilde :)

<Image alt="" src="/posts/guzel-bir-deneyim-ve-basarisizlik-hikayesi/adsense.png" width="700" height="162" />

Projeyi son 1–2 aydır ücretli versiyona geçtim ama ne gelen oldu ne de giden :) O yüzden üyeliklerden bir kazancım olmadı. Kazancım olmadığı gibi kullanıcı kazancım da olmadı.

Buraya uzun uzun maddi kazançları yazıp sizi heyecanlandırmak isterdim ama maalesef ki durumlar bundan ibaret :)

- Aynı zamanda üniversite öğrencisi olduğum için yurt dışından ve yurt içinden bir kaç şirkete başvuruyordum. Onlarla yaptığımız bir görüşmede bir start-up’a sahibim dediğim zaman çok daha ilgili oluyorlardı. Küçük bir proje olmasına rağmen start-up olarak bahsediyordum. Daha sonra da konuşma direkt projem üstünden devam edip neler yaptığımı ve neler kullandığımı anlatıyordum.
- Kendi fikrimce bu şekilde bir yaklaşım sizin üretken ve çalışkan bir birey olduğunuzu gösteriyor. Çünkü bu yaşlarda (20) genellikle bir şeyler tüketilmekte.
- Projeyi yayına almadan ve aldıktan sonra bir çok kişiye ulaşıp görüş ve yorumlarını almaya çalışıyordum. Yazdığım onca kişi birbirinden farklı düşünceye, yaşam kalitesine, farklı yaş aralıklarına sahip. Bundan dolayı farklı açıdan yaklaşmamı sağlıyordu.
- Bu şekilde insanlarla ulaşarak aynı zamanda dostluk kazandığım da oldu. Ben onların fikirlerini dinledim, onlar beni dinledi… Girişimci ruha sahip insanlarla dostluk kurmak gerçekten farklı dünya. Çünkü ya her şeye problem olarak yaklaşıyorlar ya da her şeye bir çözüm olarak yaklaşıyorlar.
- Lise zamanlarında ön tarafını kodladım ve arka tarafı için yeterli bir bilgiye sahip değildim. Bir kaç kişi aradım ve anlaştığımızı düşündüm ama yarı yolda bırakıldım. Bundan dolayı python öğrenme fırsatı doğdu ve kendimi bilmediğim bir bahçenin içinde buldum. Zorlanarak da olsa bir şekilde kodlamayı başardım. Burada biter mi? Tabii ki hayır, devamı mutlaka gelir. Araştırarak, deneyerek, sorarak… bir şekilde projeyi gerçekleştirmeye çalışıyordum. Velhasıl kelam kendimi hiç ummadığım bir yerde bulup yeni teknolojilerde öğrenip kullanırken buldum.
- Özellikle teknoloji ve pazarlama alanında çok farklı deneme yanılmalarım oldu. Eğer ki yazılımcı iseniz hangi alanda uzmanlaşmak istiyorsanız bence o alan üzerinde geliştirmeler yapın. — bu söylediklerim yolun başında olanlar içindir — Çünkü geleceğe çok büyük bir yatırım oluyor. Tabii ben javascript ile ilgilendiğim için node.js ve react ile işlerimi halletim. Bu yolu seçerek çok doğru yaptım. Neden mi? Çünkü zaman zaman dönüp koda baktığım zaman neyi yanlış yaptığımı, nasıl bir yol izlediğimi görüp bunun daha iyi ve doğru yolunu kestirebiliyor ve öğrenebiliyorum.
- Son olarak da sosyal medya için konuşmak istiyorum; Eğer hedef kitleniz 35–40 yaş ve üstü ise kesinlikle facebook, hedef kitleniz 50 yaş altıysa tabii ki instagram ve hedef kitleniz kadınsa pinterest’i unutmayın. Reklamları da buna göre çıkarsanız güzel bir dönüş almanız kaçınılmazdır.
- Dediğim gibi çok fazla insanlarla konuşup onların fikirlerini duydum. Yeni tanıştığım insanlarla konuşurken onların da düşünme şekillerini biraz da olsa aldım. Tasarlarken ve kodlarken nasıl bir yoldan geçtiğimi gördüm. Pazarlarken sürecin ne kadar zor olduğunu ve hangi mecraları aktif olarak kullanacağımı öğrendim. Velhasıl kelam iyi öğrendim.
- Başarısız mı olduk? Olmadı mı? Fark eder mi? Bir daha deneriz. Bardağın dolu tarafından bakıp çıkarılan dersler eşliğinde yeni bir proje ile hedefi 12'den vurmaya bir adım daha yaklaşırız. Yine mi olmadı? Demek ki eksiklerimiz var ki yeni derslere ihtiyacımız oluyor. Öğrenmemiz gerek.

<Tweet id="1309756353053941760" />

Yazıyı bitirmeden önce demek istediğim son şey. Düşün, uygula, geliştir, mutlu ol! Hiçbir şey hayal ettiğin gibi olmaz. Hiçbir şey o kadar da [kolay değil](https://www.youtube.com/channel/UCetKWpbOb68pP3ptKzS_7fw)!
]]></summary>
        <content type="html"><![CDATA[
Davetiyem.co yani dijital düğün davetiye oluşturma projesini 19 Ocak 2019 tarihinde yayına almıştım. Yaklaşık 2 yıldır yayında olan projemi 27 Eylül 2020 itibari ile sonlandırmış bulunmaktayım. Tamamen deneyim kazanmak ve bir şeyler başarabilmek için çıktığım bu yolda güzel deneyimler ve birikimler kazandım. Burada ise kendime bir kaç şeyler demek ve bu süreç içerisinde neler öğrendiğimi, neleri yanlış yaptığımı sizlerle de paylaşmak istedim.

<hr />

## Teksen hiçbir şeysin!

Tamam, çok güzel. Bir fikrin var ve inanıyorsun ki ben bunu başaracağım. Kendine inanıyorsun ve pozitifsin, çok güzel. Peki yanında kim var? Projeyi geliştirirken kimlerle çalışacaksın? Çalışma arkadaşların kim?

Ben en büyük sorunlarımdan biri projede yalnız olmamdı. Bundan dolayı ki her şeye benim koşmam ve halletmem gerekiyordu. Bu şekilde tamamen kendimi yordum ve verimli bir şekilde proje üzerinde düşünemedim. Odağını sadece bir yönde toplamak o işe olan verimliliğini arttıracaktır. Sadece 3 kişi olduğunuzu düşünsene. Sen yazılım tarafında bakıyorsun, bir arkadaşın tasarım kısmına, diğer arkadaşın ise pazarlama. Bence 3 kişi ile güzel bir çalışma bile çıkarılır. Yeter ki görev dağılımı yapın ve herkes gönülden çalışsın.

## Bir an önce pazara çıkın!

Zamanında şöyle bir tweet atmıştım.

<Tweet id="1290376689667776512" />

Gerçekten de öyle. Çünkü bir şekilde o projeyi uygulama haline getirebilirsin. Neden hala kodlama üzerine kafa yoruyoruz ki? Zaten hiçbir şey düşündüğünüz gibi olmuyor ve yayına aldıktan sonra bir çok şeyi değiştiriyorsunuz. Fikrinizi en basit şekilde (MVP) uygulama haline getirin ve yayına alın. Zaten yayındayken de bir şeyler ekleyip bir şeyler de kaldıracaksın. Kodlama ile neden bu kadar çok vakit kaybediyoruz?

İsterseniz fikri kodlamak için 5–6 ay harcayın. Başarı garanti mi? Projeyi bir an önce yayına alıp pazarlama ve kullanıcıyı uygulamada tutmak — kullanıcı kazanmak demiyorum, dikkat edin — için çalışmalar yapın.

## Pazarlamaya ağırlık verin!

Projede tasarımı yapan, yazılım tarafıyla ilgilenen, sosyal medya ve blog sayfaların yöneten bendim. Ama gelgelelim pazarlama dünyası. Diğerlerini bir şekilde yapabiliyorsun ama pazarlama çok ayrı bir dünya. Ben kendi çevremde paylaşabildiğim kadarıyla paylaşıyordum ama bu yeterli değildi. Pazarlama kısmına ağırlık verip kullanıcılara ulaşır ve güzel bir stratejiyle de kullanıcıyı uygulamada tutarsınız.

## Bütçesiz çok zor!

Bütçesiz bir seviyeye kadar oluyor, olamam demem ama. Bu seviye girişimi kurduktan ilk 1 ay falan. Bir aydan sonra belli bir takım harcamalar yapılması gerekiyor. Yoksa uygulama olduğu yerde kalır ve sizin tek yaptığınız bugün uygulamayı kaç kişi kullanmış, kaç kişi üye olmuş.

<hr />

Bu süreçten çıkardığım konular genel itibariyle bu şekilde. Birazda bana kazandırdıklarından konuşmaya ne dersiniz?

Projeden maddi olarak kazandığım rakam bu şekilde. Sadece blog sayfasında adsense kullanıyordum ve son zamanlarda günde bir kaç tık alıyorduk. Toplanan miktar bu şekilde :)

<Image alt="" src="/posts/guzel-bir-deneyim-ve-basarisizlik-hikayesi/adsense.png" width="700" height="162" />

Projeyi son 1–2 aydır ücretli versiyona geçtim ama ne gelen oldu ne de giden :) O yüzden üyeliklerden bir kazancım olmadı. Kazancım olmadığı gibi kullanıcı kazancım da olmadı.

Buraya uzun uzun maddi kazançları yazıp sizi heyecanlandırmak isterdim ama maalesef ki durumlar bundan ibaret :)

- Aynı zamanda üniversite öğrencisi olduğum için yurt dışından ve yurt içinden bir kaç şirkete başvuruyordum. Onlarla yaptığımız bir görüşmede bir start-up’a sahibim dediğim zaman çok daha ilgili oluyorlardı. Küçük bir proje olmasına rağmen start-up olarak bahsediyordum. Daha sonra da konuşma direkt projem üstünden devam edip neler yaptığımı ve neler kullandığımı anlatıyordum.
- Kendi fikrimce bu şekilde bir yaklaşım sizin üretken ve çalışkan bir birey olduğunuzu gösteriyor. Çünkü bu yaşlarda (20) genellikle bir şeyler tüketilmekte.
- Projeyi yayına almadan ve aldıktan sonra bir çok kişiye ulaşıp görüş ve yorumlarını almaya çalışıyordum. Yazdığım onca kişi birbirinden farklı düşünceye, yaşam kalitesine, farklı yaş aralıklarına sahip. Bundan dolayı farklı açıdan yaklaşmamı sağlıyordu.
- Bu şekilde insanlarla ulaşarak aynı zamanda dostluk kazandığım da oldu. Ben onların fikirlerini dinledim, onlar beni dinledi… Girişimci ruha sahip insanlarla dostluk kurmak gerçekten farklı dünya. Çünkü ya her şeye problem olarak yaklaşıyorlar ya da her şeye bir çözüm olarak yaklaşıyorlar.
- Lise zamanlarında ön tarafını kodladım ve arka tarafı için yeterli bir bilgiye sahip değildim. Bir kaç kişi aradım ve anlaştığımızı düşündüm ama yarı yolda bırakıldım. Bundan dolayı python öğrenme fırsatı doğdu ve kendimi bilmediğim bir bahçenin içinde buldum. Zorlanarak da olsa bir şekilde kodlamayı başardım. Burada biter mi? Tabii ki hayır, devamı mutlaka gelir. Araştırarak, deneyerek, sorarak… bir şekilde projeyi gerçekleştirmeye çalışıyordum. Velhasıl kelam kendimi hiç ummadığım bir yerde bulup yeni teknolojilerde öğrenip kullanırken buldum.
- Özellikle teknoloji ve pazarlama alanında çok farklı deneme yanılmalarım oldu. Eğer ki yazılımcı iseniz hangi alanda uzmanlaşmak istiyorsanız bence o alan üzerinde geliştirmeler yapın. — bu söylediklerim yolun başında olanlar içindir — Çünkü geleceğe çok büyük bir yatırım oluyor. Tabii ben javascript ile ilgilendiğim için node.js ve react ile işlerimi halletim. Bu yolu seçerek çok doğru yaptım. Neden mi? Çünkü zaman zaman dönüp koda baktığım zaman neyi yanlış yaptığımı, nasıl bir yol izlediğimi görüp bunun daha iyi ve doğru yolunu kestirebiliyor ve öğrenebiliyorum.
- Son olarak da sosyal medya için konuşmak istiyorum; Eğer hedef kitleniz 35–40 yaş ve üstü ise kesinlikle facebook, hedef kitleniz 50 yaş altıysa tabii ki instagram ve hedef kitleniz kadınsa pinterest’i unutmayın. Reklamları da buna göre çıkarsanız güzel bir dönüş almanız kaçınılmazdır.
- Dediğim gibi çok fazla insanlarla konuşup onların fikirlerini duydum. Yeni tanıştığım insanlarla konuşurken onların da düşünme şekillerini biraz da olsa aldım. Tasarlarken ve kodlarken nasıl bir yoldan geçtiğimi gördüm. Pazarlarken sürecin ne kadar zor olduğunu ve hangi mecraları aktif olarak kullanacağımı öğrendim. Velhasıl kelam iyi öğrendim.
- Başarısız mı olduk? Olmadı mı? Fark eder mi? Bir daha deneriz. Bardağın dolu tarafından bakıp çıkarılan dersler eşliğinde yeni bir proje ile hedefi 12'den vurmaya bir adım daha yaklaşırız. Yine mi olmadı? Demek ki eksiklerimiz var ki yeni derslere ihtiyacımız oluyor. Öğrenmemiz gerek.

<Tweet id="1309756353053941760" />

Yazıyı bitirmeden önce demek istediğim son şey. Düşün, uygula, geliştir, mutlu ol! Hiçbir şey hayal ettiğin gibi olmaz. Hiçbir şey o kadar da [kolay değil](https://www.youtube.com/channel/UCetKWpbOb68pP3ptKzS_7fw)!
]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[React vs Vue: Benim Fikrimce.]]></title>
        <id>https://beratbozkurt.net/blog/react-vs-vue</id>
        <link href="https://beratbozkurt.net/blog/react-vs-vue"/>
        <updated>2020-05-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
Şu an kariyerime freelance olarak devam ettiğim için front-end dünyasındaki bir çok teknolojiler ile proje üretmeye çalışıyorum. Bir proje geldiği zaman hangi teknolojiye kullanmak daha mantıklıysa onu seçerek projeye geliştirmeyi amaçlıyorum. O yüzden teknolojiler hakkında bilgi sahibi olmalı ve pratik için projeler üretmeliydim.

Normalde React ile projeler geliştiriyorum ve aslında gayet memnundum. Biraz zaman boşluğum olunca da vue ile basit bir proje yaptım ve mantığını anlamama fazlasıyla yeterli oldu. Böyle bir yazı yazmak istiyordum. O yüzden react öğrenmeye başladığım ilk zamanlarda yaptığım projeyi tekrardan vue ile yazdım. Bu şekilde karşılaştırmam daha kolay olacaktı.

<hr />
Başlamadan önce repo ve demo adreslerine aşağıdan ulaşabilirsiniz.

<h3>React</h3>

Github Repo: [https://github.com/berat/react-practical](https://github.com/berat/react-practical)

Demo: [https://practical-react.herokuapp.com/](https://practical-react.herokuapp.com/)

<h3>Vue</h3>

Github Repo: [https://github.com/berat/vuejs-practical](https://github.com/berat/vuejs-practical)

Demo: [https://vuejs-practical.surge.sh/](https://vuejs-practical.surge.sh/)

<br />

Başlıklar şeklinde yazmak isterdim ama terimsel ifadelere fazla hakim değilim. O yüzden maddeler halinde yazacağım.

- React bildiğim için vue ile proje geliştirmem çok kolay oldu. React başladığım zaman her şeye yeni başladığım için bu süre uzundu. Eğer her ikisinide öğrenemk isterseniz vue ile başlamanızı tavsiye ederim. Başlangıç aşamasında vue dökümanı gerçekten çok başarılı.

- Kodlama stili olarak React derim. Vue yazım standardını beğenemedim. HTML’in içine if, for yazmak bana göre değil.
- Redux mı Vuex mu diye sorsalar kuşkusuz vuex derim. Vuex’da statelerle uğraşmak gerçekten kolay ve hemen sonuç alıyorsun. Redux öğrendiğim zaman sanırım 1–2 gün harcamıştım.
- Router olayında ise bir seçim yapamam. Bana göre ikisi de basit ve kullanışlı. O yüzden burayı es geçelim.
- Vue da kod yapısını oluşturmak için `<template>` `<script>` `<style>` şeklinde kullanıyorsun. Hiç bir zaman bunu zorla kullanmalısın (`v-if`, `<template>`) denilen durumları sevmedim. Kod yazarken istediğim şekilde yazmayı seviyorum. O yüzden benim için Angular ve Vue aynı, React ise farklı yerde.
- React yazarken Hooks kullanıyorum. O yüzden useEffect ile işimi görüyordum. Bildiğim kadarıyla vue’da en çok kullanılan 5–6 tane yaşam döngüsü var ve bunları kullanmak gerçekten çok kolay ve anlaşılır ama bir seçim yapmam gerekirse React tarafında oyumu kullanırım. _vue’da Hooks gibi bir şey var mı bilmiyorum_
- Vue devtool, React devtool’un çok çok önünde bile.Vue devtool’u o kadar güzel tasarlamışlar ki kullanması çok kolay.

<hr />
Eğer sen hangisini önereceksin diye soracak olursanız, size diyeceğim tek şey. “Birisini öğren ve sadece başla”. Birisini öğrenmeye başladıktan sonra diğerini yazmak gerçekten çok kolay olacak. Daha sonra sana hangisi daha mantıklı gelirse zaten onu kullanırsın. İkisinide dene tarafını seç!

Kesinlikle birbirini ayıran noktalar olabilir ama ben sadece yüzeysel olarak geçmek istedim. Bir haftasonu projesi yapacaksam kesinlikle vue seçerim. Ama diğer projelerde react kullanmaktan şaşmam.
]]></summary>
        <content type="html"><![CDATA[
Şu an kariyerime freelance olarak devam ettiğim için front-end dünyasındaki bir çok teknolojiler ile proje üretmeye çalışıyorum. Bir proje geldiği zaman hangi teknolojiye kullanmak daha mantıklıysa onu seçerek projeye geliştirmeyi amaçlıyorum. O yüzden teknolojiler hakkında bilgi sahibi olmalı ve pratik için projeler üretmeliydim.

Normalde React ile projeler geliştiriyorum ve aslında gayet memnundum. Biraz zaman boşluğum olunca da vue ile basit bir proje yaptım ve mantığını anlamama fazlasıyla yeterli oldu. Böyle bir yazı yazmak istiyordum. O yüzden react öğrenmeye başladığım ilk zamanlarda yaptığım projeyi tekrardan vue ile yazdım. Bu şekilde karşılaştırmam daha kolay olacaktı.

<hr />
Başlamadan önce repo ve demo adreslerine aşağıdan ulaşabilirsiniz.

<h3>React</h3>

Github Repo: [https://github.com/berat/react-practical](https://github.com/berat/react-practical)

Demo: [https://practical-react.herokuapp.com/](https://practical-react.herokuapp.com/)

<h3>Vue</h3>

Github Repo: [https://github.com/berat/vuejs-practical](https://github.com/berat/vuejs-practical)

Demo: [https://vuejs-practical.surge.sh/](https://vuejs-practical.surge.sh/)

<br />

Başlıklar şeklinde yazmak isterdim ama terimsel ifadelere fazla hakim değilim. O yüzden maddeler halinde yazacağım.

- React bildiğim için vue ile proje geliştirmem çok kolay oldu. React başladığım zaman her şeye yeni başladığım için bu süre uzundu. Eğer her ikisinide öğrenemk isterseniz vue ile başlamanızı tavsiye ederim. Başlangıç aşamasında vue dökümanı gerçekten çok başarılı.

- Kodlama stili olarak React derim. Vue yazım standardını beğenemedim. HTML’in içine if, for yazmak bana göre değil.
- Redux mı Vuex mu diye sorsalar kuşkusuz vuex derim. Vuex’da statelerle uğraşmak gerçekten kolay ve hemen sonuç alıyorsun. Redux öğrendiğim zaman sanırım 1–2 gün harcamıştım.
- Router olayında ise bir seçim yapamam. Bana göre ikisi de basit ve kullanışlı. O yüzden burayı es geçelim.
- Vue da kod yapısını oluşturmak için `<template>` `<script>` `<style>` şeklinde kullanıyorsun. Hiç bir zaman bunu zorla kullanmalısın (`v-if`, `<template>`) denilen durumları sevmedim. Kod yazarken istediğim şekilde yazmayı seviyorum. O yüzden benim için Angular ve Vue aynı, React ise farklı yerde.
- React yazarken Hooks kullanıyorum. O yüzden useEffect ile işimi görüyordum. Bildiğim kadarıyla vue’da en çok kullanılan 5–6 tane yaşam döngüsü var ve bunları kullanmak gerçekten çok kolay ve anlaşılır ama bir seçim yapmam gerekirse React tarafında oyumu kullanırım. _vue’da Hooks gibi bir şey var mı bilmiyorum_
- Vue devtool, React devtool’un çok çok önünde bile.Vue devtool’u o kadar güzel tasarlamışlar ki kullanması çok kolay.

<hr />
Eğer sen hangisini önereceksin diye soracak olursanız, size diyeceğim tek şey. “Birisini öğren ve sadece başla”. Birisini öğrenmeye başladıktan sonra diğerini yazmak gerçekten çok kolay olacak. Daha sonra sana hangisi daha mantıklı gelirse zaten onu kullanırsın. İkisinide dene tarafını seç!

Kesinlikle birbirini ayıran noktalar olabilir ama ben sadece yüzeysel olarak geçmek istedim. Bir haftasonu projesi yapacaksam kesinlikle vue seçerim. Ama diğer projelerde react kullanmaktan şaşmam.
]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
    <entry>
        <title type="html"><![CDATA[VSCode Dünyam]]></title>
        <id>https://beratbozkurt.net/blog/vscode-dunyam</id>
        <link href="https://beratbozkurt.net/blog/vscode-dunyam"/>
        <updated>2020-04-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[
Selamlar, uzun zamandır bir şeyler yazmadığımı fark ettim. Bildiğiniz üzeri evleredeyiz ve eğitime uzaktan devam ediliyor. Bu kadar boş zamanımız varken kendimi eğitmeye ve proje geliştirmeye devam ediyorum. Bu zamanı verimli bir şekilde geçirmeye çalışıyorum. Bu zamanlarımın çoğu ise VSCode ekranına bakmak ile geçiyor. O yüzden burası benim dünyam sayılıyor ve dünyamı da güzelleştirmek için belli bir takım eklentiler, temalar ve ayarlar yapmak gerekiyor. Belki de bugün sizlerle aynı dünyayı paylaşacağız. Kim bilebilir :)

<hr />

# Eklentiler

Önereceğim eklentiler dışında snippetler ve code runner için eklentiler kullanıyorum. Bunların zaten kullandığını varsayıyorum.

<h3>1- Backet Pair Colorizer | [İncele](https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer)</h3>

<Image alt="Eklenti sayfasından aldım" src="/posts/vscode-dunyam/parantez.png" width="297" height="60" />

Eğer (süslü, köşeli) parantezler içerisinde boğuluyorsanız kurmanız gereken bir numaralı eklentidir. Her paranteze ait bir renk belirlenir ve hangi alan ile ilgileniyorsanız daha iyi odaklanabilirsiniz.

<h3>2- Colorize | [İncele](https://marketplace.visualstudio.com/items?itemName=kamikillerto.vscode-colorize)</h3>

<Tweet id="1249304972887539714" />

Twitter’da da paylaşmış olduğum bir eklenti. Tweet’de göreceğiniz gibi renk kodlarınızı bu şekilde renkli hale getirerek hangi renk olduğunu kolay bir şekilde görmenize imkan veren bir eklenti.

<h3>3- Highlight Matching Tag | [İncele](https://marketplace.visualstudio.com/items?itemName=vincaslt.highlight-matching-tag)</h3>

<Image alt="Eklenti sayfasından aldım" src="/posts/vscode-dunyam/highlight.gif" width="529" height="306" />

Eğer (süslü, köşeli) parantezler içerisinde boğuluyorsanız kurmanız gereken bir numaralı eklentidir. Her paranteze ait bir renk belirlenir ve hangi alan ile ilgileniyorsanız daha iyi odaklanabilirsiniz.

<h3>4- Markdown-formatter | [İncele](https://marketplace.visualstudio.com/items?itemName=mervin.markdown-formatter)</h3>

<Image alt="Eklenti sayfasından aldım" src="/posts/vscode-dunyam/markdown.gif" width="419" height="224" />

Size tavsiye ettiğim son eklenti ise markdown-formatter. Eğer .md uzantı dosyanıza içerik hazırlıyorsunuz bu eklenti ile işinizi hızlandırabilirsiniz.

<hr />

# Temalar

Temalar için birden fazla tercihim var. Çünkü o anki mod halime göre o an farklı temalar kullanabiliyorum.

<h3>1- Palenight Theme | [İncele](https://marketplace.visualstudio.com/items?itemName=whizkydee.material-palenight-theme)</h3>

<Image alt="" src="/posts/vscode-dunyam/palenight.png" width="639" height="571" />

En fazla kullandığım temalardan biridir. Bu tonlarda kod yazarken odaklanabildiğim ve gözlerimi yormadığı için bu temayı çok fazla kullanıyorum.

<h3>2- Night Owl | [İncele](https://marketplace.visualstudio.com/items?itemName=sdras.night-owl)</h3>

<Image alt="" src="/posts/vscode-dunyam/night-owl.png" width="636" height="566" />

Eğer erken saatlerde kod yazıyorsam açık renkli temalar kullanmaya özen gösteriyorum. Bir çok tema denedim ama bu temada karar kıldım.

<h3>3- Andromeda | [İncele](https://marketplace.visualstudio.com/items?itemName=EliverLara.andromeda)</h3>

<Image alt="" src="/posts/vscode-dunyam/andromeda.png" width="635" height="570" />

Eğer biraz daha renkli bir tema arıyorsanız size bu temayı önerebilirim. Ama bir süre sonra göz yorgunluğuna neden olabilir. O yüzden kullanmayı fazla tercih etmiyorum.

<hr />

**Font** olarak [JetBrains Mono](https://www.jetbrains.com/lp/mono/) kullanıyorum. Bu tarz fontları gerçekten çok seviyorum. Javascript kodu yazdığınız zaman `=>` bu şekilde görmek yerine birleşik görmek gerçekten güzel.
]]></summary>
        <content type="html"><![CDATA[
Selamlar, uzun zamandır bir şeyler yazmadığımı fark ettim. Bildiğiniz üzeri evleredeyiz ve eğitime uzaktan devam ediliyor. Bu kadar boş zamanımız varken kendimi eğitmeye ve proje geliştirmeye devam ediyorum. Bu zamanı verimli bir şekilde geçirmeye çalışıyorum. Bu zamanlarımın çoğu ise VSCode ekranına bakmak ile geçiyor. O yüzden burası benim dünyam sayılıyor ve dünyamı da güzelleştirmek için belli bir takım eklentiler, temalar ve ayarlar yapmak gerekiyor. Belki de bugün sizlerle aynı dünyayı paylaşacağız. Kim bilebilir :)

<hr />

# Eklentiler

Önereceğim eklentiler dışında snippetler ve code runner için eklentiler kullanıyorum. Bunların zaten kullandığını varsayıyorum.

<h3>1- Backet Pair Colorizer | [İncele](https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer)</h3>

<Image alt="Eklenti sayfasından aldım" src="/posts/vscode-dunyam/parantez.png" width="297" height="60" />

Eğer (süslü, köşeli) parantezler içerisinde boğuluyorsanız kurmanız gereken bir numaralı eklentidir. Her paranteze ait bir renk belirlenir ve hangi alan ile ilgileniyorsanız daha iyi odaklanabilirsiniz.

<h3>2- Colorize | [İncele](https://marketplace.visualstudio.com/items?itemName=kamikillerto.vscode-colorize)</h3>

<Tweet id="1249304972887539714" />

Twitter’da da paylaşmış olduğum bir eklenti. Tweet’de göreceğiniz gibi renk kodlarınızı bu şekilde renkli hale getirerek hangi renk olduğunu kolay bir şekilde görmenize imkan veren bir eklenti.

<h3>3- Highlight Matching Tag | [İncele](https://marketplace.visualstudio.com/items?itemName=vincaslt.highlight-matching-tag)</h3>

<Image alt="Eklenti sayfasından aldım" src="/posts/vscode-dunyam/highlight.gif" width="529" height="306" />

Eğer (süslü, köşeli) parantezler içerisinde boğuluyorsanız kurmanız gereken bir numaralı eklentidir. Her paranteze ait bir renk belirlenir ve hangi alan ile ilgileniyorsanız daha iyi odaklanabilirsiniz.

<h3>4- Markdown-formatter | [İncele](https://marketplace.visualstudio.com/items?itemName=mervin.markdown-formatter)</h3>

<Image alt="Eklenti sayfasından aldım" src="/posts/vscode-dunyam/markdown.gif" width="419" height="224" />

Size tavsiye ettiğim son eklenti ise markdown-formatter. Eğer .md uzantı dosyanıza içerik hazırlıyorsunuz bu eklenti ile işinizi hızlandırabilirsiniz.

<hr />

# Temalar

Temalar için birden fazla tercihim var. Çünkü o anki mod halime göre o an farklı temalar kullanabiliyorum.

<h3>1- Palenight Theme | [İncele](https://marketplace.visualstudio.com/items?itemName=whizkydee.material-palenight-theme)</h3>

<Image alt="" src="/posts/vscode-dunyam/palenight.png" width="639" height="571" />

En fazla kullandığım temalardan biridir. Bu tonlarda kod yazarken odaklanabildiğim ve gözlerimi yormadığı için bu temayı çok fazla kullanıyorum.

<h3>2- Night Owl | [İncele](https://marketplace.visualstudio.com/items?itemName=sdras.night-owl)</h3>

<Image alt="" src="/posts/vscode-dunyam/night-owl.png" width="636" height="566" />

Eğer erken saatlerde kod yazıyorsam açık renkli temalar kullanmaya özen gösteriyorum. Bir çok tema denedim ama bu temada karar kıldım.

<h3>3- Andromeda | [İncele](https://marketplace.visualstudio.com/items?itemName=EliverLara.andromeda)</h3>

<Image alt="" src="/posts/vscode-dunyam/andromeda.png" width="635" height="570" />

Eğer biraz daha renkli bir tema arıyorsanız size bu temayı önerebilirim. Ama bir süre sonra göz yorgunluğuna neden olabilir. O yüzden kullanmayı fazla tercih etmiyorum.

<hr />

**Font** olarak [JetBrains Mono](https://www.jetbrains.com/lp/mono/) kullanıyorum. Bu tarz fontları gerçekten çok seviyorum. Javascript kodu yazdığınız zaman `=>` bu şekilde görmek yerine birleşik görmek gerçekten güzel.
]]></content>
        <author>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </author>
        <contributor>
            <name>Berat Bozkurt</name>
            <email>beratbozkurt1999@gmail.com</email>
            <uri>https://twitter.com/beratbozkurt0</uri>
        </contributor>
    </entry>
</feed>